{"id":"c251384deb04bb59bc3bde5eedb1d642","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@ethereum-attestation-service/eas-contracts/contracts/Common.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// A representation of an empty/uninitialized UID.\nbytes32 constant EMPTY_UID = 0;\n\n// A zero expiration represents an non-expiring attestation.\nuint64 constant NO_EXPIRATION_TIME = 0;\n\nerror AccessDenied();\nerror DeadlineExpired();\nerror InvalidEAS();\nerror InvalidLength();\nerror InvalidSignature();\nerror NotFound();\n\n/// @notice A struct representing ECDSA signature data.\nstruct Signature {\n    uint8 v; // The recovery ID.\n    bytes32 r; // The x-coordinate of the nonce R.\n    bytes32 s; // The signature data.\n}\n\n/// @notice A struct representing a single attestation.\nstruct Attestation {\n    bytes32 uid; // A unique identifier of the attestation.\n    bytes32 schema; // The unique identifier of the schema.\n    uint64 time; // The time when the attestation was created (Unix timestamp).\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    uint64 revocationTime; // The time when the attestation was revoked (Unix timestamp).\n    bytes32 refUID; // The UID of the related attestation.\n    address recipient; // The recipient of the attestation.\n    address attester; // The attester/sender of the attestation.\n    bool revocable; // Whether the attestation is revocable.\n    bytes data; // Custom attestation data.\n}\n\n/// @notice A helper function to work with unchecked iterators in loops.\nfunction uncheckedInc(uint256 i) pure returns (uint256 j) {\n    unchecked {\n        j = i + 1;\n    }\n}\n"},"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISchemaRegistry } from \"./ISchemaRegistry.sol\";\nimport { Attestation, Signature } from \"./Common.sol\";\n\n/// @notice A struct representing the arguments of the attestation request.\nstruct AttestationRequestData {\n    address recipient; // The recipient of the attestation.\n    uint64 expirationTime; // The time when the attestation expires (Unix timestamp).\n    bool revocable; // Whether the attestation is revocable.\n    bytes32 refUID; // The UID of the related attestation.\n    bytes data; // Custom attestation data.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the attestation request.\nstruct AttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the full delegated attestation request.\nstruct DelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData data; // The arguments of the attestation request.\n    Signature signature; // The ECDSA signature data.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi attestation request.\nstruct MultiAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi attestation request.\nstruct MultiDelegatedAttestationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    AttestationRequestData[] data; // The arguments of the attestation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address attester; // The attesting account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the arguments of the revocation request.\nstruct RevocationRequestData {\n    bytes32 uid; // The UID of the attestation to revoke.\n    uint256 value; // An explicit ETH amount to send to the resolver. This is important to prevent accidental user errors.\n}\n\n/// @notice A struct representing the full arguments of the revocation request.\nstruct RevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the arguments of the full delegated revocation request.\nstruct DelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData data; // The arguments of the revocation request.\n    Signature signature; // The ECDSA signature data.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @notice A struct representing the full arguments of the multi revocation request.\nstruct MultiRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation request.\n}\n\n/// @notice A struct representing the full arguments of the delegated multi revocation request.\nstruct MultiDelegatedRevocationRequest {\n    bytes32 schema; // The unique identifier of the schema.\n    RevocationRequestData[] data; // The arguments of the revocation requests.\n    Signature[] signatures; // The ECDSA signatures data. Please note that the signatures are assumed to be signed with increasing nonces.\n    address revoker; // The revoking account.\n    uint64 deadline; // The deadline of the signature/request.\n}\n\n/// @title IEAS\n/// @notice EAS - Ethereum Attestation Service interface.\ninterface IEAS {\n    /// @notice Emitted when an attestation has been made.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param uid The UID the revoked attestation.\n    /// @param schemaUID The UID of the schema.\n    event Attested(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when an attestation has been revoked.\n    /// @param recipient The recipient of the attestation.\n    /// @param attester The attesting account.\n    /// @param schemaUID The UID of the schema.\n    /// @param uid The UID the revoked attestation.\n    event Revoked(address indexed recipient, address indexed attester, bytes32 uid, bytes32 indexed schemaUID);\n\n    /// @notice Emitted when a data has been timestamped.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event Timestamped(bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Emitted when a data has been revoked.\n    /// @param revoker The address of the revoker.\n    /// @param data The data.\n    /// @param timestamp The timestamp.\n    event RevokedOffchain(address indexed revoker, bytes32 indexed data, uint64 indexed timestamp);\n\n    /// @notice Returns the address of the global schema registry.\n    /// @return The address of the global schema registry.\n    function getSchemaRegistry() external view returns (ISchemaRegistry);\n\n    /// @notice Attests to a specific schema.\n    /// @param request The arguments of the attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attest({\n    ///         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n    ///         data: {\n    ///             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n    ///             data: \"0xF00D\",\n    ///             value: 0\n    ///         }\n    ///     })\n    function attest(AttestationRequest calldata request) external payable returns (bytes32);\n\n    /// @notice Attests to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated attestation request.\n    /// @return The UID of the new attestation.\n    ///\n    /// Example:\n    ///     attestByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n    ///         deadline: 1673891048\n    ///     })\n    function attestByDelegation(\n        DelegatedAttestationRequest calldata delegatedRequest\n    ) external payable returns (bytes32);\n\n    /// @notice Attests to multiple schemas.\n    /// @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttest([{\n    ///         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: true,\n    ///             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n    ///             data: '0x12345678',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiAttest(MultiAttestationRequest[] calldata multiRequests) external payable returns (bytes32[] memory);\n\n    /// @notice Attests to multiple schemas using via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n    ///     grouped by distinct schema ids to benefit from the best batching optimization.\n    /// @return The UIDs of the new attestations.\n    ///\n    /// Example:\n    ///     multiAttestByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n    ///             expirationTime: 1673891048,\n    ///             revocable: true,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x1234',\n    ///             value: 0\n    ///         },\n    ///         {\n    ///             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n    ///             expirationTime: 0,\n    ///             revocable: false,\n    ///             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n    ///             data: '0x00',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiAttestByDelegation(\n        MultiDelegatedAttestationRequest[] calldata multiDelegatedRequests\n    ) external payable returns (bytes32[] memory);\n\n    /// @notice Revokes an existing attestation to a specific schema.\n    /// @param request The arguments of the revocation request.\n    ///\n    /// Example:\n    ///     revoke({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n    ///             value: 0\n    ///         }\n    ///     })\n    function revoke(RevocationRequest calldata request) external payable;\n\n    /// @notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n    /// @param delegatedRequest The arguments of the delegated revocation request.\n    ///\n    /// Example:\n    ///     revokeByDelegation({\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: {\n    ///             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n    ///             value: 0\n    ///         },\n    ///         signature: {\n    ///             v: 27,\n    ///             r: '0xb593...7142',\n    ///             s: '0x0f5b...2cce'\n    ///         },\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     })\n    function revokeByDelegation(DelegatedRevocationRequest calldata delegatedRequest) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas.\n    /// @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n    ///     schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevoke([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///     },\n    ///     {\n    ///         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n    ///         data: [{\n    ///             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n    ///             value: 0\n    ///         },\n    ///     }])\n    function multiRevoke(MultiRevocationRequest[] calldata multiRequests) external payable;\n\n    /// @notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n    /// @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n    ///     should be grouped by distinct schema ids to benefit from the best batching optimization.\n    ///\n    /// Example:\n    ///     multiRevokeByDelegation([{\n    ///         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n    ///         data: [{\n    ///             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n    ///             value: 1000\n    ///         },\n    ///         {\n    ///             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n    ///             value: 0\n    ///         }],\n    ///         signatures: [{\n    ///             v: 28,\n    ///             r: '0x148c...b25b',\n    ///             s: '0x5a72...be22'\n    ///         },\n    ///         {\n    ///             v: 28,\n    ///             r: '0x487s...67bb',\n    ///             s: '0x12ad...2366'\n    ///         }],\n    ///         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n    ///         deadline: 1673891048\n    ///     }])\n    function multiRevokeByDelegation(\n        MultiDelegatedRevocationRequest[] calldata multiDelegatedRequests\n    ) external payable;\n\n    /// @notice Timestamps the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function timestamp(bytes32 data) external returns (uint64);\n\n    /// @notice Timestamps the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was timestamped with.\n    function multiTimestamp(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Revokes the specified bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function revokeOffchain(bytes32 data) external returns (uint64);\n\n    /// @notice Revokes the specified multiple bytes32 data.\n    /// @param data The data to timestamp.\n    /// @return The timestamp the data was revoked with.\n    function multiRevokeOffchain(bytes32[] calldata data) external returns (uint64);\n\n    /// @notice Returns an existing attestation by UID.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return The attestation data members.\n    function getAttestation(bytes32 uid) external view returns (Attestation memory);\n\n    /// @notice Checks whether an attestation exists.\n    /// @param uid The UID of the attestation to retrieve.\n    /// @return Whether an attestation exists.\n    function isAttestationValid(bytes32 uid) external view returns (bool);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getTimestamp(bytes32 data) external view returns (uint64);\n\n    /// @notice Returns the timestamp that the specified data was timestamped with.\n    /// @param data The data to query.\n    /// @return The timestamp the data was timestamped with.\n    function getRevokeOffchain(address revoker, bytes32 data) external view returns (uint64);\n}\n"},"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { ISchemaResolver } from \"./resolver/ISchemaResolver.sol\";\n\n/// @notice A struct representing a record for a submitted schema.\nstruct SchemaRecord {\n    bytes32 uid; // The unique identifier of the schema.\n    ISchemaResolver resolver; // Optional schema resolver.\n    bool revocable; // Whether the schema allows revocations explicitly.\n    string schema; // Custom specification of the schema (e.g., an ABI).\n}\n\n/// @title ISchemaRegistry\n/// @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol.\ninterface ISchemaRegistry {\n    /// @notice Emitted when a new schema has been registered\n    /// @param uid The schema UID.\n    /// @param registerer The address of the account used to register the schema.\n    /// @param schema The schema data.\n    event Registered(bytes32 indexed uid, address indexed registerer, SchemaRecord schema);\n\n    /// @notice Submits and reserves a new schema\n    /// @param schema The schema data schema.\n    /// @param resolver An optional schema resolver.\n    /// @param revocable Whether the schema allows revocations explicitly.\n    /// @return The UID of the new schema.\n    function register(string calldata schema, ISchemaResolver resolver, bool revocable) external returns (bytes32);\n\n    /// @notice Returns an existing schema by UID\n    /// @param uid The UID of the schema to retrieve.\n    /// @return The schema data members.\n    function getSchema(bytes32 uid) external view returns (SchemaRecord memory);\n}\n"},"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Attestation } from \"../Common.sol\";\n\n/// @title ISchemaResolver\n/// @notice The interface of an optional schema resolver.\ninterface ISchemaResolver {\n    /// @notice Checks if the resolver can be sent ETH.\n    /// @return Whether the resolver supports ETH transfers.\n    function isPayable() external pure returns (bool);\n\n    /// @notice Processes an attestation and verifies whether it's valid.\n    /// @param attestation The new attestation.\n    /// @return Whether the attestation is valid.\n    function attest(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes multiple attestations and verifies whether they are valid.\n    /// @param attestations The new attestations.\n    /// @param values Explicit ETH amounts which were sent with each attestation.\n    /// @return Whether all the attestations are valid.\n    function multiAttest(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n\n    /// @notice Processes an attestation revocation and verifies if it can be revoked.\n    /// @param attestation The existing attestation to be revoked.\n    /// @return Whether the attestation can be revoked.\n    function revoke(Attestation calldata attestation) external payable returns (bool);\n\n    /// @notice Processes revocation of multiple attestation and verifies they can be revoked.\n    /// @param attestations The existing attestations to be revoked.\n    /// @param values Explicit ETH amounts which were sent with each revocation.\n    /// @return Whether the attestations can be revoked.\n    function multiRevoke(\n        Attestation[] calldata attestations,\n        uint256[] calldata values\n    ) external payable returns (bool);\n}\n"},"src/Condition.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport { IEAS, AttestationRequest,AttestationRequestData } from \"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\";\nimport { NO_EXPIRATION_TIME, EMPTY_UID,Attestation } from \"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\";\nimport { ISchemaRegistry,SchemaRecord } from \"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\";\nimport { ISchemaResolver } from \"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\";\n\ncontract Condition {\n\n    IEAS private  _eas=IEAS(0xC2679fBD37d54388Ce493F1DB75320D236e1815e);\n\n    function getRecepient(bytes32 attestUid) internal view returns(Attestation memory){\n       return _eas.getAttestation(attestUid);\n       \n    }\n\n\n    function runCondition(bytes memory data) external view returns(bool){\n        (address to,uint256 amount,bytes32 uid)=abi.decode(data,(address,uint256,bytes32));\n        require(to==0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC);\n        require(amount<=100);\n        require(getRecepient(uid).attester==0x90F79bf6EB2c4f870365E785982E1f101E93b906);\n        require(getRecepient(uid).recipient==to);\n        (uint256 score,bool isdev)=abi.decode(getRecepient(uid).data,(uint256,bool));\n        require(score >=70);\n        require(isdev==true);\n        return true;\n    }\n\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@ethereum-attestation-service/eas-contracts/contracts/Common.sol":{"ast":{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/Common.sol","exportedSymbols":{"AccessDenied":[9],"Attestation":[49],"DeadlineExpired":[11],"EMPTY_UID":[4],"InvalidEAS":[13],"InvalidLength":[15],"InvalidSignature":[17],"NO_EXPIRATION_TIME":[7],"NotFound":[19],"Signature":[27],"uncheckedInc":[65]},"id":66,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:0"},{"constant":true,"id":4,"mutability":"constant","name":"EMPTY_UID","nameLocation":"126:9:0","nodeType":"VariableDeclaration","scope":66,"src":"109:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2,"name":"bytes32","nodeType":"ElementaryTypeName","src":"109:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30","id":3,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"138:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":7,"mutability":"constant","name":"NO_EXPIRATION_TIME","nameLocation":"219:18:0","nodeType":"VariableDeclaration","scope":66,"src":"203:38:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5,"name":"uint64","nodeType":"ElementaryTypeName","src":"203:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"30","id":6,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"240:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"errorSelector":"4ca88867","id":9,"name":"AccessDenied","nameLocation":"250:12:0","nodeType":"ErrorDefinition","parameters":{"id":8,"nodeType":"ParameterList","parameters":[],"src":"262:2:0"},"src":"244:21:0"},{"errorSelector":"1ab7da6b","id":11,"name":"DeadlineExpired","nameLocation":"272:15:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"287:2:0"},"src":"266:24:0"},{"errorSelector":"83780ffe","id":13,"name":"InvalidEAS","nameLocation":"297:10:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"307:2:0"},"src":"291:19:0"},{"errorSelector":"947d5a84","id":15,"name":"InvalidLength","nameLocation":"317:13:0","nodeType":"ErrorDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[],"src":"330:2:0"},"src":"311:22:0"},{"errorSelector":"8baa579f","id":17,"name":"InvalidSignature","nameLocation":"340:16:0","nodeType":"ErrorDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"356:2:0"},"src":"334:25:0"},{"errorSelector":"c5723b51","id":19,"name":"NotFound","nameLocation":"366:8:0","nodeType":"ErrorDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"374:2:0"},"src":"360:17:0"},{"canonicalName":"Signature","documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"379:56:0","text":"@notice A struct representing ECDSA signature data."},"id":27,"members":[{"constant":false,"id":22,"mutability":"mutable","name":"v","nameLocation":"464:1:0","nodeType":"VariableDeclaration","scope":27,"src":"458:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":21,"name":"uint8","nodeType":"ElementaryTypeName","src":"458:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":24,"mutability":"mutable","name":"r","nameLocation":"499:1:0","nodeType":"VariableDeclaration","scope":27,"src":"491:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"491:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"s","nameLocation":"550:1:0","nodeType":"VariableDeclaration","scope":27,"src":"542:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"542:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Signature","nameLocation":"442:9:0","nodeType":"StructDefinition","scope":66,"src":"435:142:0","visibility":"public"},{"canonicalName":"Attestation","documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"579:56:0","text":"@notice A struct representing a single attestation."},"id":49,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"uid","nameLocation":"668:3:0","nodeType":"VariableDeclaration","scope":49,"src":"660:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"660:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"schema","nameLocation":"728:6:0","nodeType":"VariableDeclaration","scope":49,"src":"720:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":31,"name":"bytes32","nodeType":"ElementaryTypeName","src":"720:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"time","nameLocation":"787:4:0","nodeType":"VariableDeclaration","scope":49,"src":"780:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":33,"name":"uint64","nodeType":"ElementaryTypeName","src":"780:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"expirationTime","nameLocation":"867:14:0","nodeType":"VariableDeclaration","scope":49,"src":"860:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":35,"name":"uint64","nodeType":"ElementaryTypeName","src":"860:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"revocationTime","nameLocation":"953:14:0","nodeType":"VariableDeclaration","scope":49,"src":"946:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":37,"name":"uint64","nodeType":"ElementaryTypeName","src":"946:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"refUID","nameLocation":"1044:6:0","nodeType":"VariableDeclaration","scope":49,"src":"1036:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1036:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":42,"mutability":"mutable","name":"recipient","nameLocation":"1103:9:0","nodeType":"VariableDeclaration","scope":49,"src":"1095:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":41,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"attester","nameLocation":"1163:8:0","nodeType":"VariableDeclaration","scope":49,"src":"1155:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1155:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"revocable","nameLocation":"1225:9:0","nodeType":"VariableDeclaration","scope":49,"src":"1220:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":45,"name":"bool","nodeType":"ElementaryTypeName","src":"1220:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"data","nameLocation":"1287:4:0","nodeType":"VariableDeclaration","scope":49,"src":"1281:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":47,"name":"bytes","nodeType":"ElementaryTypeName","src":"1281:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Attestation","nameLocation":"642:11:0","nodeType":"StructDefinition","scope":66,"src":"635:687:0","visibility":"public"},{"body":{"id":64,"nodeType":"Block","src":"1455:44:0","statements":[{"id":63,"nodeType":"UncheckedBlock","src":"1461:36:0","statements":[{"expression":{"id":61,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":57,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"1481:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":58,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"1485:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":59,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1489:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1485:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1481:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62,"nodeType":"ExpressionStatement","src":"1481:9:0"}]}]},"documentation":{"id":50,"nodeType":"StructuredDocumentation","src":"1324:73:0","text":"@notice A helper function to work with unchecked iterators in loops."},"id":65,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"uncheckedInc","nameLocation":"1406:12:0","nodeType":"FunctionDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52,"mutability":"mutable","name":"i","nameLocation":"1427:1:0","nodeType":"VariableDeclaration","scope":65,"src":"1419:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"1419:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1418:11:0"},"returnParameters":{"id":56,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"j","nameLocation":"1452:1:0","nodeType":"VariableDeclaration","scope":65,"src":"1444:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1444:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1443:11:0"},"scope":66,"src":"1397:102:0","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"33:1467:0"},"id":0},"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol":{"ast":{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol","exportedSymbols":{"Attestation":[49],"AttestationRequest":[93],"AttestationRequestData":[86],"DelegatedAttestationRequest":[107],"DelegatedRevocationRequest":[158],"IEAS":[368],"ISchemaRegistry":[417],"MultiAttestationRequest":[115],"MultiDelegatedAttestationRequest":[131],"MultiDelegatedRevocationRequest":[182],"MultiRevocationRequest":[166],"RevocationRequest":[144],"RevocationRequestData":[137],"Signature":[27]},"id":369,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":67,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:1"},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol","file":"./ISchemaRegistry.sol","id":69,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":369,"sourceUnit":418,"src":"58:56:1","symbolAliases":[{"foreign":{"id":68,"name":"ISchemaRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"67:15:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/Common.sol","file":"./Common.sol","id":72,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":369,"sourceUnit":66,"src":"115:54:1","symbolAliases":[{"foreign":{"id":70,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"124:11:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":71,"name":"Signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"137:9:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"AttestationRequestData","documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"171:76:1","text":"@notice A struct representing the arguments of the attestation request."},"id":86,"members":[{"constant":false,"id":75,"mutability":"mutable","name":"recipient","nameLocation":"291:9:1","nodeType":"VariableDeclaration","scope":86,"src":"283:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"283:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"expirationTime","nameLocation":"350:14:1","nodeType":"VariableDeclaration","scope":86,"src":"343:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":76,"name":"uint64","nodeType":"ElementaryTypeName","src":"343:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"revocable","nameLocation":"434:9:1","nodeType":"VariableDeclaration","scope":86,"src":"429:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":78,"name":"bool","nodeType":"ElementaryTypeName","src":"429:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"refUID","nameLocation":"498:6:1","nodeType":"VariableDeclaration","scope":86,"src":"490:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":80,"name":"bytes32","nodeType":"ElementaryTypeName","src":"490:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"data","nameLocation":"555:4:1","nodeType":"VariableDeclaration","scope":86,"src":"549:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":82,"name":"bytes","nodeType":"ElementaryTypeName","src":"549:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"value","nameLocation":"601:5:1","nodeType":"VariableDeclaration","scope":86,"src":"593:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AttestationRequestData","nameLocation":"254:22:1","nodeType":"StructDefinition","scope":369,"src":"247:466:1","visibility":"public"},{"canonicalName":"AttestationRequest","documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"715:81:1","text":"@notice A struct representing the full arguments of the attestation request."},"id":93,"members":[{"constant":false,"id":89,"mutability":"mutable","name":"schema","nameLocation":"836:6:1","nodeType":"VariableDeclaration","scope":93,"src":"828:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":88,"name":"bytes32","nodeType":"ElementaryTypeName","src":"828:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":92,"mutability":"mutable","name":"data","nameLocation":"911:4:1","nodeType":"VariableDeclaration","scope":93,"src":"888:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"},"typeName":{"id":91,"nodeType":"UserDefinedTypeName","pathNode":{"id":90,"name":"AttestationRequestData","nameLocations":["888:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"888:22:1"},"referencedDeclaration":86,"src":"888:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"}},"visibility":"internal"}],"name":"AttestationRequest","nameLocation":"803:18:1","nodeType":"StructDefinition","scope":369,"src":"796:167:1","visibility":"public"},{"canonicalName":"DelegatedAttestationRequest","documentation":{"id":94,"nodeType":"StructuredDocumentation","src":"965:96:1","text":"@notice A struct representing the full arguments of the full delegated attestation request."},"id":107,"members":[{"constant":false,"id":96,"mutability":"mutable","name":"schema","nameLocation":"1110:6:1","nodeType":"VariableDeclaration","scope":107,"src":"1102:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":95,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1102:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"data","nameLocation":"1185:4:1","nodeType":"VariableDeclaration","scope":107,"src":"1162:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"},"typeName":{"id":98,"nodeType":"UserDefinedTypeName","pathNode":{"id":97,"name":"AttestationRequestData","nameLocations":["1162:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"1162:22:1"},"referencedDeclaration":86,"src":"1162:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"signature","nameLocation":"1250:9:1","nodeType":"VariableDeclaration","scope":107,"src":"1240:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"},"typeName":{"id":101,"nodeType":"UserDefinedTypeName","pathNode":{"id":100,"name":"Signature","nameLocations":["1240:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"1240:9:1"},"referencedDeclaration":27,"src":"1240:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"attester","nameLocation":"1302:8:1","nodeType":"VariableDeclaration","scope":107,"src":"1294:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"1294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"deadline","nameLocation":"1349:8:1","nodeType":"VariableDeclaration","scope":107,"src":"1342:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":105,"name":"uint64","nodeType":"ElementaryTypeName","src":"1342:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"DelegatedAttestationRequest","nameLocation":"1068:27:1","nodeType":"StructDefinition","scope":369,"src":"1061:341:1","visibility":"public"},{"canonicalName":"MultiAttestationRequest","documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"1404:87:1","text":"@notice A struct representing the full arguments of the multi attestation request."},"id":115,"members":[{"constant":false,"id":110,"mutability":"mutable","name":"schema","nameLocation":"1536:6:1","nodeType":"VariableDeclaration","scope":115,"src":"1528:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"data","nameLocation":"1613:4:1","nodeType":"VariableDeclaration","scope":115,"src":"1588:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AttestationRequestData_$86_storage_$dyn_storage_ptr","typeString":"struct AttestationRequestData[]"},"typeName":{"baseType":{"id":112,"nodeType":"UserDefinedTypeName","pathNode":{"id":111,"name":"AttestationRequestData","nameLocations":["1588:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"1588:22:1"},"referencedDeclaration":86,"src":"1588:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"}},"id":113,"nodeType":"ArrayTypeName","src":"1588:24:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AttestationRequestData_$86_storage_$dyn_storage_ptr","typeString":"struct AttestationRequestData[]"}},"visibility":"internal"}],"name":"MultiAttestationRequest","nameLocation":"1498:23:1","nodeType":"StructDefinition","scope":369,"src":"1491:174:1","visibility":"public"},{"canonicalName":"MultiDelegatedAttestationRequest","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"1667:97:1","text":"@notice A struct representing the full arguments of the delegated multi attestation request."},"id":131,"members":[{"constant":false,"id":118,"mutability":"mutable","name":"schema","nameLocation":"1818:6:1","nodeType":"VariableDeclaration","scope":131,"src":"1810:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1810:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":122,"mutability":"mutable","name":"data","nameLocation":"1895:4:1","nodeType":"VariableDeclaration","scope":131,"src":"1870:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AttestationRequestData_$86_storage_$dyn_storage_ptr","typeString":"struct AttestationRequestData[]"},"typeName":{"baseType":{"id":120,"nodeType":"UserDefinedTypeName","pathNode":{"id":119,"name":"AttestationRequestData","nameLocations":["1870:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"1870:22:1"},"referencedDeclaration":86,"src":"1870:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequestData_$86_storage_ptr","typeString":"struct AttestationRequestData"}},"id":121,"nodeType":"ArrayTypeName","src":"1870:24:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AttestationRequestData_$86_storage_$dyn_storage_ptr","typeString":"struct AttestationRequestData[]"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"signatures","nameLocation":"1963:10:1","nodeType":"VariableDeclaration","scope":131,"src":"1951:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Signature_$27_storage_$dyn_storage_ptr","typeString":"struct Signature[]"},"typeName":{"baseType":{"id":124,"nodeType":"UserDefinedTypeName","pathNode":{"id":123,"name":"Signature","nameLocations":["1951:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"1951:9:1"},"referencedDeclaration":27,"src":"1951:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"}},"id":125,"nodeType":"ArrayTypeName","src":"1951:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Signature_$27_storage_$dyn_storage_ptr","typeString":"struct Signature[]"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"attester","nameLocation":"2098:8:1","nodeType":"VariableDeclaration","scope":131,"src":"2090:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"2090:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"deadline","nameLocation":"2145:8:1","nodeType":"VariableDeclaration","scope":131,"src":"2138:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":129,"name":"uint64","nodeType":"ElementaryTypeName","src":"2138:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"MultiDelegatedAttestationRequest","nameLocation":"1771:32:1","nodeType":"StructDefinition","scope":369,"src":"1764:434:1","visibility":"public"},{"canonicalName":"RevocationRequestData","documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"2200:75:1","text":"@notice A struct representing the arguments of the revocation request."},"id":137,"members":[{"constant":false,"id":134,"mutability":"mutable","name":"uid","nameLocation":"2318:3:1","nodeType":"VariableDeclaration","scope":137,"src":"2310:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2310:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"value","nameLocation":"2376:5:1","nodeType":"VariableDeclaration","scope":137,"src":"2368:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RevocationRequestData","nameLocation":"2282:21:1","nodeType":"StructDefinition","scope":369,"src":"2275:213:1","visibility":"public"},{"canonicalName":"RevocationRequest","documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"2490:80:1","text":"@notice A struct representing the full arguments of the revocation request."},"id":144,"members":[{"constant":false,"id":140,"mutability":"mutable","name":"schema","nameLocation":"2609:6:1","nodeType":"VariableDeclaration","scope":144,"src":"2601:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2601:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"data","nameLocation":"2683:4:1","nodeType":"VariableDeclaration","scope":144,"src":"2661:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"},"typeName":{"id":142,"nodeType":"UserDefinedTypeName","pathNode":{"id":141,"name":"RevocationRequestData","nameLocations":["2661:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"2661:21:1"},"referencedDeclaration":137,"src":"2661:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"}},"visibility":"internal"}],"name":"RevocationRequest","nameLocation":"2577:17:1","nodeType":"StructDefinition","scope":369,"src":"2570:164:1","visibility":"public"},{"canonicalName":"DelegatedRevocationRequest","documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2736:90:1","text":"@notice A struct representing the arguments of the full delegated revocation request."},"id":158,"members":[{"constant":false,"id":147,"mutability":"mutable","name":"schema","nameLocation":"2874:6:1","nodeType":"VariableDeclaration","scope":158,"src":"2866:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2866:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"data","nameLocation":"2948:4:1","nodeType":"VariableDeclaration","scope":158,"src":"2926:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"},"typeName":{"id":149,"nodeType":"UserDefinedTypeName","pathNode":{"id":148,"name":"RevocationRequestData","nameLocations":["2926:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"2926:21:1"},"referencedDeclaration":137,"src":"2926:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"signature","nameLocation":"3012:9:1","nodeType":"VariableDeclaration","scope":158,"src":"3002:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"},"typeName":{"id":152,"nodeType":"UserDefinedTypeName","pathNode":{"id":151,"name":"Signature","nameLocations":["3002:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"3002:9:1"},"referencedDeclaration":27,"src":"3002:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"revoker","nameLocation":"3064:7:1","nodeType":"VariableDeclaration","scope":158,"src":"3056:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"3056:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"deadline","nameLocation":"3109:8:1","nodeType":"VariableDeclaration","scope":158,"src":"3102:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":156,"name":"uint64","nodeType":"ElementaryTypeName","src":"3102:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"DelegatedRevocationRequest","nameLocation":"2833:26:1","nodeType":"StructDefinition","scope":369,"src":"2826:336:1","visibility":"public"},{"canonicalName":"MultiRevocationRequest","documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3164:86:1","text":"@notice A struct representing the full arguments of the multi revocation request."},"id":166,"members":[{"constant":false,"id":161,"mutability":"mutable","name":"schema","nameLocation":"3294:6:1","nodeType":"VariableDeclaration","scope":166,"src":"3286:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3286:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"data","nameLocation":"3370:4:1","nodeType":"VariableDeclaration","scope":166,"src":"3346:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RevocationRequestData_$137_storage_$dyn_storage_ptr","typeString":"struct RevocationRequestData[]"},"typeName":{"baseType":{"id":163,"nodeType":"UserDefinedTypeName","pathNode":{"id":162,"name":"RevocationRequestData","nameLocations":["3346:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"3346:21:1"},"referencedDeclaration":137,"src":"3346:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"}},"id":164,"nodeType":"ArrayTypeName","src":"3346:23:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RevocationRequestData_$137_storage_$dyn_storage_ptr","typeString":"struct RevocationRequestData[]"}},"visibility":"internal"}],"name":"MultiRevocationRequest","nameLocation":"3257:22:1","nodeType":"StructDefinition","scope":369,"src":"3250:171:1","visibility":"public"},{"canonicalName":"MultiDelegatedRevocationRequest","documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"3423:96:1","text":"@notice A struct representing the full arguments of the delegated multi revocation request."},"id":182,"members":[{"constant":false,"id":169,"mutability":"mutable","name":"schema","nameLocation":"3572:6:1","nodeType":"VariableDeclaration","scope":182,"src":"3564:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"data","nameLocation":"3648:4:1","nodeType":"VariableDeclaration","scope":182,"src":"3624:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RevocationRequestData_$137_storage_$dyn_storage_ptr","typeString":"struct RevocationRequestData[]"},"typeName":{"baseType":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"RevocationRequestData","nameLocations":["3624:21:1"],"nodeType":"IdentifierPath","referencedDeclaration":137,"src":"3624:21:1"},"referencedDeclaration":137,"src":"3624:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequestData_$137_storage_ptr","typeString":"struct RevocationRequestData"}},"id":172,"nodeType":"ArrayTypeName","src":"3624:23:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RevocationRequestData_$137_storage_$dyn_storage_ptr","typeString":"struct RevocationRequestData[]"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"signatures","nameLocation":"3715:10:1","nodeType":"VariableDeclaration","scope":182,"src":"3703:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Signature_$27_storage_$dyn_storage_ptr","typeString":"struct Signature[]"},"typeName":{"baseType":{"id":175,"nodeType":"UserDefinedTypeName","pathNode":{"id":174,"name":"Signature","nameLocations":["3703:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":27,"src":"3703:9:1"},"referencedDeclaration":27,"src":"3703:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_Signature_$27_storage_ptr","typeString":"struct Signature"}},"id":176,"nodeType":"ArrayTypeName","src":"3703:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Signature_$27_storage_$dyn_storage_ptr","typeString":"struct Signature[]"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"revoker","nameLocation":"3850:7:1","nodeType":"VariableDeclaration","scope":182,"src":"3842:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":178,"name":"address","nodeType":"ElementaryTypeName","src":"3842:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"deadline","nameLocation":"3895:8:1","nodeType":"VariableDeclaration","scope":182,"src":"3888:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":180,"name":"uint64","nodeType":"ElementaryTypeName","src":"3888:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"MultiDelegatedRevocationRequest","nameLocation":"3526:31:1","nodeType":"StructDefinition","scope":369,"src":"3519:429:1","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IEAS","contractDependencies":[],"contractKind":"interface","documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"3950:74:1","text":"@title IEAS\n @notice EAS - Ethereum Attestation Service interface."},"fullyImplemented":false,"id":368,"linearizedBaseContracts":[368],"name":"IEAS","nameLocation":"4034:4:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"4045:260:1","text":"@notice Emitted when an attestation has been made.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param uid The UID the revoked attestation.\n @param schemaUID The UID of the schema."},"eventSelector":"8bf46bf4cfd674fa735a3d63ec1c9ad4153f033c290341f3a588b75685141b35","id":194,"name":"Attested","nameLocation":"4316:8:1","nodeType":"EventDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4341:9:1","nodeType":"VariableDeclaration","scope":194,"src":"4325:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"4325:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":188,"indexed":true,"mutability":"mutable","name":"attester","nameLocation":"4368:8:1","nodeType":"VariableDeclaration","scope":194,"src":"4352:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"indexed":false,"mutability":"mutable","name":"uid","nameLocation":"4386:3:1","nodeType":"VariableDeclaration","scope":194,"src":"4378:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4378:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":192,"indexed":true,"mutability":"mutable","name":"schemaUID","nameLocation":"4407:9:1","nodeType":"VariableDeclaration","scope":194,"src":"4391:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4324:93:1"},"src":"4310:108:1"},{"anonymous":false,"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"4424:263:1","text":"@notice Emitted when an attestation has been revoked.\n @param recipient The recipient of the attestation.\n @param attester The attesting account.\n @param schemaUID The UID of the schema.\n @param uid The UID the revoked attestation."},"eventSelector":"f930a6e2523c9cc298691873087a740550b8fc85a0680830414c148ed927f615","id":205,"name":"Revoked","nameLocation":"4698:7:1","nodeType":"EventDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4722:9:1","nodeType":"VariableDeclaration","scope":205,"src":"4706:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"4706:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"indexed":true,"mutability":"mutable","name":"attester","nameLocation":"4749:8:1","nodeType":"VariableDeclaration","scope":205,"src":"4733:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":198,"name":"address","nodeType":"ElementaryTypeName","src":"4733:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":201,"indexed":false,"mutability":"mutable","name":"uid","nameLocation":"4767:3:1","nodeType":"VariableDeclaration","scope":205,"src":"4759:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4759:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":203,"indexed":true,"mutability":"mutable","name":"schemaUID","nameLocation":"4788:9:1","nodeType":"VariableDeclaration","scope":205,"src":"4772:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":202,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4772:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4705:93:1"},"src":"4692:107:1"},{"anonymous":false,"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"4805:123:1","text":"@notice Emitted when a data has been timestamped.\n @param data The data.\n @param timestamp The timestamp."},"eventSelector":"5aafceeb1c7ad58e4a84898bdee37c02c0fc46e7d24e6b60e8209449f183459f","id":212,"name":"Timestamped","nameLocation":"4939:11:1","nodeType":"EventDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"4967:4:1","nodeType":"VariableDeclaration","scope":212,"src":"4951:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4951:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"timestamp","nameLocation":"4988:9:1","nodeType":"VariableDeclaration","scope":212,"src":"4973:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":209,"name":"uint64","nodeType":"ElementaryTypeName","src":"4973:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4950:48:1"},"src":"4933:66:1"},{"anonymous":false,"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"5005:170:1","text":"@notice Emitted when a data has been revoked.\n @param revoker The address of the revoker.\n @param data The data.\n @param timestamp The timestamp."},"eventSelector":"92a1f7a41a7c585a8b09e25b195e225b1d43248daca46b0faf9e0792777a2229","id":221,"name":"RevokedOffchain","nameLocation":"5186:15:1","nodeType":"EventDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"indexed":true,"mutability":"mutable","name":"revoker","nameLocation":"5218:7:1","nodeType":"VariableDeclaration","scope":221,"src":"5202:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"5202:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"indexed":true,"mutability":"mutable","name":"data","nameLocation":"5243:4:1","nodeType":"VariableDeclaration","scope":221,"src":"5227:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":219,"indexed":true,"mutability":"mutable","name":"timestamp","nameLocation":"5264:9:1","nodeType":"VariableDeclaration","scope":221,"src":"5249:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":218,"name":"uint64","nodeType":"ElementaryTypeName","src":"5249:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5201:73:1"},"src":"5180:95:1"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"5281:121:1","text":"@notice Returns the address of the global schema registry.\n @return The address of the global schema registry."},"functionSelector":"f10b5cc8","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"getSchemaRegistry","nameLocation":"5416:17:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"5433:2:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"5459:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaRegistry_$417","typeString":"contract ISchemaRegistry"},"typeName":{"id":225,"nodeType":"UserDefinedTypeName","pathNode":{"id":224,"name":"ISchemaRegistry","nameLocations":["5459:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":417,"src":"5459:15:1"},"referencedDeclaration":417,"src":"5459:15:1","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaRegistry_$417","typeString":"contract ISchemaRegistry"}},"visibility":"internal"}],"src":"5458:17:1"},"scope":368,"src":"5407:69:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":229,"nodeType":"StructuredDocumentation","src":"5482:665:1","text":"@notice Attests to a specific schema.\n @param request The arguments of the attestation request.\n @return The UID of the new attestation.\n Example:\n     attest({\n         schema: \"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\",\n         data: {\n             recipient: \"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\",\n             expirationTime: 0,\n             revocable: true,\n             refUID: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n             data: \"0xF00D\",\n             value: 0\n         }\n     })"},"functionSelector":"f17325e7","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"6161:6:1","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"request","nameLocation":"6196:7:1","nodeType":"VariableDeclaration","scope":237,"src":"6168:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequest_$93_calldata_ptr","typeString":"struct AttestationRequest"},"typeName":{"id":231,"nodeType":"UserDefinedTypeName","pathNode":{"id":230,"name":"AttestationRequest","nameLocations":["6168:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":93,"src":"6168:18:1"},"referencedDeclaration":93,"src":"6168:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AttestationRequest_$93_storage_ptr","typeString":"struct AttestationRequest"}},"visibility":"internal"}],"src":"6167:37:1"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"6231:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6231:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6230:9:1"},"scope":368,"src":"6152:88:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"6246:1004:1","text":"@notice Attests to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated attestation request.\n @return The UID of the new attestation.\n Example:\n     attestByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         signature: {\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',\n         deadline: 1673891048\n     })"},"functionSelector":"3c042715","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"attestByDelegation","nameLocation":"7264:18:1","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"delegatedRequest","nameLocation":"7329:16:1","nodeType":"VariableDeclaration","scope":246,"src":"7292:53:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DelegatedAttestationRequest_$107_calldata_ptr","typeString":"struct DelegatedAttestationRequest"},"typeName":{"id":240,"nodeType":"UserDefinedTypeName","pathNode":{"id":239,"name":"DelegatedAttestationRequest","nameLocations":["7292:27:1"],"nodeType":"IdentifierPath","referencedDeclaration":107,"src":"7292:27:1"},"referencedDeclaration":107,"src":"7292:27:1","typeDescriptions":{"typeIdentifier":"t_struct$_DelegatedAttestationRequest_$107_storage_ptr","typeString":"struct DelegatedAttestationRequest"}},"visibility":"internal"}],"src":"7282:69:1"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":246,"src":"7378:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":243,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7378:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7377:9:1"},"scope":368,"src":"7255:132:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":247,"nodeType":"StructuredDocumentation","src":"7393:1656:1","text":"@notice Attests to multiple schemas.\n @param multiRequests The arguments of the multi attestation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttest([{\n         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 1000\n         },\n         {\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',\n             data: '0x00',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: true,\n             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',\n             data: '0x12345678',\n             value: 0\n         },\n     }])"},"functionSelector":"44adc90e","id":257,"implemented":false,"kind":"function","modifiers":[],"name":"multiAttest","nameLocation":"9063:11:1","nodeType":"FunctionDefinition","parameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"multiRequests","nameLocation":"9110:13:1","nodeType":"VariableDeclaration","scope":257,"src":"9075:48:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiAttestationRequest_$115_calldata_ptr_$dyn_calldata_ptr","typeString":"struct MultiAttestationRequest[]"},"typeName":{"baseType":{"id":249,"nodeType":"UserDefinedTypeName","pathNode":{"id":248,"name":"MultiAttestationRequest","nameLocations":["9075:23:1"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"9075:23:1"},"referencedDeclaration":115,"src":"9075:23:1","typeDescriptions":{"typeIdentifier":"t_struct$_MultiAttestationRequest_$115_storage_ptr","typeString":"struct MultiAttestationRequest"}},"id":250,"nodeType":"ArrayTypeName","src":"9075:25:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiAttestationRequest_$115_storage_$dyn_storage_ptr","typeString":"struct MultiAttestationRequest[]"}},"visibility":"internal"}],"src":"9074:50:1"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"9151:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9151:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":254,"nodeType":"ArrayTypeName","src":"9151:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9150:18:1"},"scope":368,"src":"9054:115:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"9175:1642:1","text":"@notice Attests to multiple schemas using via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi attestation requests. The requests should be\n     grouped by distinct schema ids to benefit from the best batching optimization.\n @return The UIDs of the new attestations.\n Example:\n     multiAttestByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',\n             expirationTime: 1673891048,\n             revocable: true,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x1234',\n             value: 0\n         },\n         {\n             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',\n             expirationTime: 0,\n             revocable: false,\n             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',\n             data: '0x00',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',\n         deadline: 1673891048\n     }])"},"functionSelector":"95411525","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"multiAttestByDelegation","nameLocation":"10831:23:1","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"multiDelegatedRequests","nameLocation":"10908:22:1","nodeType":"VariableDeclaration","scope":268,"src":"10864:66:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiDelegatedAttestationRequest_$131_calldata_ptr_$dyn_calldata_ptr","typeString":"struct MultiDelegatedAttestationRequest[]"},"typeName":{"baseType":{"id":260,"nodeType":"UserDefinedTypeName","pathNode":{"id":259,"name":"MultiDelegatedAttestationRequest","nameLocations":["10864:32:1"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"10864:32:1"},"referencedDeclaration":131,"src":"10864:32:1","typeDescriptions":{"typeIdentifier":"t_struct$_MultiDelegatedAttestationRequest_$131_storage_ptr","typeString":"struct MultiDelegatedAttestationRequest"}},"id":261,"nodeType":"ArrayTypeName","src":"10864:34:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiDelegatedAttestationRequest_$131_storage_$dyn_storage_ptr","typeString":"struct MultiDelegatedAttestationRequest[]"}},"visibility":"internal"}],"src":"10854:82:1"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":268,"src":"10963:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10963:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":265,"nodeType":"ArrayTypeName","src":"10963:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10962:18:1"},"scope":368,"src":"10822:159:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"10987:450:1","text":"@notice Revokes an existing attestation to a specific schema.\n @param request The arguments of the revocation request.\n Example:\n     revoke({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',\n             value: 0\n         }\n     })"},"functionSelector":"46926267","id":275,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"11451:6:1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":272,"mutability":"mutable","name":"request","nameLocation":"11485:7:1","nodeType":"VariableDeclaration","scope":275,"src":"11458:34:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequest_$144_calldata_ptr","typeString":"struct RevocationRequest"},"typeName":{"id":271,"nodeType":"UserDefinedTypeName","pathNode":{"id":270,"name":"RevocationRequest","nameLocations":["11458:17:1"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"11458:17:1"},"referencedDeclaration":144,"src":"11458:17:1","typeDescriptions":{"typeIdentifier":"t_struct$_RevocationRequest_$144_storage_ptr","typeString":"struct RevocationRequest"}},"visibility":"internal"}],"src":"11457:36:1"},"returnParameters":{"id":274,"nodeType":"ParameterList","parameters":[],"src":"11510:0:1"},"scope":368,"src":"11442:69:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"11517:777:1","text":"@notice Revokes an existing attestation to a specific schema via the provided ECDSA signature.\n @param delegatedRequest The arguments of the delegated revocation request.\n Example:\n     revokeByDelegation({\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: {\n             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',\n             value: 0\n         },\n         signature: {\n             v: 27,\n             r: '0xb593...7142',\n             s: '0x0f5b...2cce'\n         },\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     })"},"functionSelector":"a6d4dbc7","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"revokeByDelegation","nameLocation":"12308:18:1","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"delegatedRequest","nameLocation":"12363:16:1","nodeType":"VariableDeclaration","scope":282,"src":"12327:52:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DelegatedRevocationRequest_$158_calldata_ptr","typeString":"struct DelegatedRevocationRequest"},"typeName":{"id":278,"nodeType":"UserDefinedTypeName","pathNode":{"id":277,"name":"DelegatedRevocationRequest","nameLocations":["12327:26:1"],"nodeType":"IdentifierPath","referencedDeclaration":158,"src":"12327:26:1"},"referencedDeclaration":158,"src":"12327:26:1","typeDescriptions":{"typeIdentifier":"t_struct$_DelegatedRevocationRequest_$158_storage_ptr","typeString":"struct DelegatedRevocationRequest"}},"visibility":"internal"}],"src":"12326:54:1"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[],"src":"12397:0:1"},"scope":368,"src":"12299:99:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"12404:1039:1","text":"@notice Revokes existing attestations to multiple schemas.\n @param multiRequests The arguments of the multi revocation requests. The requests should be grouped by distinct\n     schema ids to benefit from the best batching optimization.\n Example:\n     multiRevoke([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n     },\n     {\n         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',\n         data: [{\n             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',\n             value: 0\n         },\n     }])"},"functionSelector":"4cb7e9e5","id":290,"implemented":false,"kind":"function","modifiers":[],"name":"multiRevoke","nameLocation":"13457:11:1","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"multiRequests","nameLocation":"13503:13:1","nodeType":"VariableDeclaration","scope":290,"src":"13469:47:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiRevocationRequest_$166_calldata_ptr_$dyn_calldata_ptr","typeString":"struct MultiRevocationRequest[]"},"typeName":{"baseType":{"id":285,"nodeType":"UserDefinedTypeName","pathNode":{"id":284,"name":"MultiRevocationRequest","nameLocations":["13469:22:1"],"nodeType":"IdentifierPath","referencedDeclaration":166,"src":"13469:22:1"},"referencedDeclaration":166,"src":"13469:22:1","typeDescriptions":{"typeIdentifier":"t_struct$_MultiRevocationRequest_$166_storage_ptr","typeString":"struct MultiRevocationRequest"}},"id":286,"nodeType":"ArrayTypeName","src":"13469:24:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiRevocationRequest_$166_storage_$dyn_storage_ptr","typeString":"struct MultiRevocationRequest[]"}},"visibility":"internal"}],"src":"13468:49:1"},"returnParameters":{"id":289,"nodeType":"ParameterList","parameters":[],"src":"13534:0:1"},"scope":368,"src":"13448:87:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"13541:1229:1","text":"@notice Revokes existing attestations to multiple schemas via provided ECDSA signatures.\n @param multiDelegatedRequests The arguments of the delegated multi revocation attestation requests. The requests\n     should be grouped by distinct schema ids to benefit from the best batching optimization.\n Example:\n     multiRevokeByDelegation([{\n         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',\n         data: [{\n             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',\n             value: 1000\n         },\n         {\n             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',\n             value: 0\n         }],\n         signatures: [{\n             v: 28,\n             r: '0x148c...b25b',\n             s: '0x5a72...be22'\n         },\n         {\n             v: 28,\n             r: '0x487s...67bb',\n             s: '0x12ad...2366'\n         }],\n         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',\n         deadline: 1673891048\n     }])"},"functionSelector":"0eabf660","id":298,"implemented":false,"kind":"function","modifiers":[],"name":"multiRevokeByDelegation","nameLocation":"14784:23:1","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"multiDelegatedRequests","nameLocation":"14860:22:1","nodeType":"VariableDeclaration","scope":298,"src":"14817:65:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiDelegatedRevocationRequest_$182_calldata_ptr_$dyn_calldata_ptr","typeString":"struct MultiDelegatedRevocationRequest[]"},"typeName":{"baseType":{"id":293,"nodeType":"UserDefinedTypeName","pathNode":{"id":292,"name":"MultiDelegatedRevocationRequest","nameLocations":["14817:31:1"],"nodeType":"IdentifierPath","referencedDeclaration":182,"src":"14817:31:1"},"referencedDeclaration":182,"src":"14817:31:1","typeDescriptions":{"typeIdentifier":"t_struct$_MultiDelegatedRevocationRequest_$182_storage_ptr","typeString":"struct MultiDelegatedRevocationRequest"}},"id":294,"nodeType":"ArrayTypeName","src":"14817:33:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MultiDelegatedRevocationRequest_$182_storage_$dyn_storage_ptr","typeString":"struct MultiDelegatedRevocationRequest[]"}},"visibility":"internal"}],"src":"14807:81:1"},"returnParameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"14905:0:1"},"scope":368,"src":"14775:131:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"14912:154:1","text":"@notice Timestamps the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."},"functionSelector":"4d003070","id":306,"implemented":false,"kind":"function","modifiers":[],"name":"timestamp","nameLocation":"15080:9:1","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"data","nameLocation":"15098:4:1","nodeType":"VariableDeclaration","scope":306,"src":"15090:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15090:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15089:14:1"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"15122:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":303,"name":"uint64","nodeType":"ElementaryTypeName","src":"15122:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15121:8:1"},"scope":368,"src":"15071:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"15136:163:1","text":"@notice Timestamps the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was timestamped with."},"functionSelector":"e71ff365","id":315,"implemented":false,"kind":"function","modifiers":[],"name":"multiTimestamp","nameLocation":"15313:14:1","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"data","nameLocation":"15347:4:1","nodeType":"VariableDeclaration","scope":315,"src":"15328:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15328:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":309,"nodeType":"ArrayTypeName","src":"15328:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15327:25:1"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"15371:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":312,"name":"uint64","nodeType":"ElementaryTypeName","src":"15371:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15370:8:1"},"scope":368,"src":"15304:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"15385:147:1","text":"@notice Revokes the specified bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."},"functionSelector":"cf190f34","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOffchain","nameLocation":"15546:14:1","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"data","nameLocation":"15569:4:1","nodeType":"VariableDeclaration","scope":323,"src":"15561:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":317,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15561:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15560:14:1"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":323,"src":"15593:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":320,"name":"uint64","nodeType":"ElementaryTypeName","src":"15593:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15592:8:1"},"scope":368,"src":"15537:64:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"15607:156:1","text":"@notice Revokes the specified multiple bytes32 data.\n @param data The data to timestamp.\n @return The timestamp the data was revoked with."},"functionSelector":"13893f61","id":332,"implemented":false,"kind":"function","modifiers":[],"name":"multiRevokeOffchain","nameLocation":"15777:19:1","nodeType":"FunctionDefinition","parameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"data","nameLocation":"15816:4:1","nodeType":"VariableDeclaration","scope":332,"src":"15797:23:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":325,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15797:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":326,"nodeType":"ArrayTypeName","src":"15797:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"15796:25:1"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":332,"src":"15840:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":329,"name":"uint64","nodeType":"ElementaryTypeName","src":"15840:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15839:8:1"},"scope":368,"src":"15768:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"15854:156:1","text":"@notice Returns an existing attestation by UID.\n @param uid The UID of the attestation to retrieve.\n @return The attestation data members."},"functionSelector":"a3112a64","id":341,"implemented":false,"kind":"function","modifiers":[],"name":"getAttestation","nameLocation":"16024:14:1","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"uid","nameLocation":"16047:3:1","nodeType":"VariableDeclaration","scope":341,"src":"16039:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16039:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16038:13:1"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":341,"src":"16075:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation"},"typeName":{"id":338,"nodeType":"UserDefinedTypeName","pathNode":{"id":337,"name":"Attestation","nameLocations":["16075:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"16075:11:1"},"referencedDeclaration":49,"src":"16075:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"16074:20:1"},"scope":368,"src":"16015:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":342,"nodeType":"StructuredDocumentation","src":"16101:155:1","text":"@notice Checks whether an attestation exists.\n @param uid The UID of the attestation to retrieve.\n @return Whether an attestation exists."},"functionSelector":"e30bb563","id":349,"implemented":false,"kind":"function","modifiers":[],"name":"isAttestationValid","nameLocation":"16270:18:1","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"uid","nameLocation":"16297:3:1","nodeType":"VariableDeclaration","scope":349,"src":"16289:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16288:13:1"},"returnParameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":349,"src":"16325:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":346,"name":"bool","nodeType":"ElementaryTypeName","src":"16325:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16324:6:1"},"scope":368,"src":"16261:70:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"16337:179:1","text":"@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."},"functionSelector":"d45c4435","id":357,"implemented":false,"kind":"function","modifiers":[],"name":"getTimestamp","nameLocation":"16530:12:1","nodeType":"FunctionDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"data","nameLocation":"16551:4:1","nodeType":"VariableDeclaration","scope":357,"src":"16543:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16543:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16542:14:1"},"returnParameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":357,"src":"16580:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":354,"name":"uint64","nodeType":"ElementaryTypeName","src":"16580:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16579:8:1"},"scope":368,"src":"16521:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"16594:179:1","text":"@notice Returns the timestamp that the specified data was timestamped with.\n @param data The data to query.\n @return The timestamp the data was timestamped with."},"functionSelector":"b469318d","id":367,"implemented":false,"kind":"function","modifiers":[],"name":"getRevokeOffchain","nameLocation":"16787:17:1","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":360,"mutability":"mutable","name":"revoker","nameLocation":"16813:7:1","nodeType":"VariableDeclaration","scope":367,"src":"16805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"16805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"data","nameLocation":"16830:4:1","nodeType":"VariableDeclaration","scope":367,"src":"16822:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":361,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16822:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16804:31:1"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":367,"src":"16859:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":364,"name":"uint64","nodeType":"ElementaryTypeName","src":"16859:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16858:8:1"},"scope":368,"src":"16778:89:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":369,"src":"4024:12845:1","usedErrors":[],"usedEvents":[194,205,212,221]}],"src":"33:16837:1"},"id":1},"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol":{"ast":{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol","exportedSymbols":{"ISchemaRegistry":[417],"ISchemaResolver":[473],"SchemaRecord":[383]},"id":418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":370,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:2"},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol","file":"./resolver/ISchemaResolver.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":418,"sourceUnit":474,"src":"58:65:2","symbolAliases":[{"foreign":{"id":371,"name":"ISchemaResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"67:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"SchemaRecord","documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"125:67:2","text":"@notice A struct representing a record for a submitted schema."},"id":383,"members":[{"constant":false,"id":375,"mutability":"mutable","name":"uid","nameLocation":"226:3:2","nodeType":"VariableDeclaration","scope":383,"src":"218:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"218:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"resolver","nameLocation":"291:8:2","nodeType":"VariableDeclaration","scope":383,"src":"275:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$473","typeString":"contract ISchemaResolver"},"typeName":{"id":377,"nodeType":"UserDefinedTypeName","pathNode":{"id":376,"name":"ISchemaResolver","nameLocations":["275:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":473,"src":"275:15:2"},"referencedDeclaration":473,"src":"275:15:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$473","typeString":"contract ISchemaResolver"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"revocable","nameLocation":"339:9:2","nodeType":"VariableDeclaration","scope":383,"src":"334:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":379,"name":"bool","nodeType":"ElementaryTypeName","src":"334:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":382,"mutability":"mutable","name":"schema","nameLocation":"414:6:2","nodeType":"VariableDeclaration","scope":383,"src":"407:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"407:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"SchemaRecord","nameLocation":"199:12:2","nodeType":"StructDefinition","scope":418,"src":"192:285:2","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"ISchemaRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"479:130:2","text":"@title ISchemaRegistry\n @notice The interface of global attestation schemas for the Ethereum Attestation Service protocol."},"fullyImplemented":false,"id":417,"linearizedBaseContracts":[417],"name":"ISchemaRegistry","nameLocation":"619:15:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"641:213:2","text":"@notice Emitted when a new schema has been registered\n @param uid The schema UID.\n @param registerer The address of the account used to register the schema.\n @param schema The schema data."},"eventSelector":"d0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e","id":394,"name":"Registered","nameLocation":"865:10:2","nodeType":"EventDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"indexed":true,"mutability":"mutable","name":"uid","nameLocation":"892:3:2","nodeType":"VariableDeclaration","scope":394,"src":"876:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"876:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":389,"indexed":true,"mutability":"mutable","name":"registerer","nameLocation":"913:10:2","nodeType":"VariableDeclaration","scope":394,"src":"897:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"indexed":false,"mutability":"mutable","name":"schema","nameLocation":"938:6:2","nodeType":"VariableDeclaration","scope":394,"src":"925:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$383_memory_ptr","typeString":"struct SchemaRecord"},"typeName":{"id":391,"nodeType":"UserDefinedTypeName","pathNode":{"id":390,"name":"SchemaRecord","nameLocations":["925:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"925:12:2"},"referencedDeclaration":383,"src":"925:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$383_storage_ptr","typeString":"struct SchemaRecord"}},"visibility":"internal"}],"src":"875:70:2"},"src":"859:87:2"},{"documentation":{"id":395,"nodeType":"StructuredDocumentation","src":"952:262:2","text":"@notice Submits and reserves a new schema\n @param schema The schema data schema.\n @param resolver An optional schema resolver.\n @param revocable Whether the schema allows revocations explicitly.\n @return The UID of the new schema."},"functionSelector":"60d7a278","id":407,"implemented":false,"kind":"function","modifiers":[],"name":"register","nameLocation":"1228:8:2","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"schema","nameLocation":"1253:6:2","nodeType":"VariableDeclaration","scope":407,"src":"1237:22:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"1237:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"resolver","nameLocation":"1277:8:2","nodeType":"VariableDeclaration","scope":407,"src":"1261:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$473","typeString":"contract ISchemaResolver"},"typeName":{"id":399,"nodeType":"UserDefinedTypeName","pathNode":{"id":398,"name":"ISchemaResolver","nameLocations":["1261:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":473,"src":"1261:15:2"},"referencedDeclaration":473,"src":"1261:15:2","typeDescriptions":{"typeIdentifier":"t_contract$_ISchemaResolver_$473","typeString":"contract ISchemaResolver"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"revocable","nameLocation":"1292:9:2","nodeType":"VariableDeclaration","scope":407,"src":"1287:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":401,"name":"bool","nodeType":"ElementaryTypeName","src":"1287:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1236:66:2"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":407,"src":"1321:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1321:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1320:9:2"},"scope":417,"src":"1219:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":408,"nodeType":"StructuredDocumentation","src":"1336:140:2","text":"@notice Returns an existing schema by UID\n @param uid The UID of the schema to retrieve.\n @return The schema data members."},"functionSelector":"a2ea7c6e","id":416,"implemented":false,"kind":"function","modifiers":[],"name":"getSchema","nameLocation":"1490:9:2","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":410,"mutability":"mutable","name":"uid","nameLocation":"1508:3:2","nodeType":"VariableDeclaration","scope":416,"src":"1500:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1500:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1499:13:2"},"returnParameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"1536:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$383_memory_ptr","typeString":"struct SchemaRecord"},"typeName":{"id":413,"nodeType":"UserDefinedTypeName","pathNode":{"id":412,"name":"SchemaRecord","nameLocations":["1536:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":383,"src":"1536:12:2"},"referencedDeclaration":383,"src":"1536:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_SchemaRecord_$383_storage_ptr","typeString":"struct SchemaRecord"}},"visibility":"internal"}],"src":"1535:21:2"},"scope":417,"src":"1481:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":418,"src":"609:950:2","usedErrors":[],"usedEvents":[394]}],"src":"33:1527:2"},"id":2},"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol":{"ast":{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol","exportedSymbols":{"Attestation":[49],"ISchemaResolver":[473]},"id":474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":419,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/Common.sol","file":"../Common.sol","id":421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":474,"sourceUnit":66,"src":"58:44:3","symbolAliases":[{"foreign":{"id":420,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"67:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ISchemaResolver","contractDependencies":[],"contractKind":"interface","documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"104:85:3","text":"@title ISchemaResolver\n @notice The interface of an optional schema resolver."},"fullyImplemented":false,"id":473,"linearizedBaseContracts":[473],"name":"ISchemaResolver","nameLocation":"199:15:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"221:112:3","text":"@notice Checks if the resolver can be sent ETH.\n @return Whether the resolver supports ETH transfers."},"functionSelector":"ce46e046","id":428,"implemented":false,"kind":"function","modifiers":[],"name":"isPayable","nameLocation":"347:9:3","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"356:2:3"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":428,"src":"382:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":425,"name":"bool","nodeType":"ElementaryTypeName","src":"382:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"381:6:3"},"scope":473,"src":"338:50:3","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"394:167:3","text":"@notice Processes an attestation and verifies whether it's valid.\n @param attestation The new attestation.\n @return Whether the attestation is valid."},"functionSelector":"e60c3505","id":437,"implemented":false,"kind":"function","modifiers":[],"name":"attest","nameLocation":"575:6:3","nodeType":"FunctionDefinition","parameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"attestation","nameLocation":"603:11:3","nodeType":"VariableDeclaration","scope":437,"src":"582:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":431,"nodeType":"UserDefinedTypeName","pathNode":{"id":430,"name":"Attestation","nameLocations":["582:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"582:11:3"},"referencedDeclaration":49,"src":"582:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"581:34:3"},"returnParameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"642:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"642:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"641:6:3"},"scope":473,"src":"566:82:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":438,"nodeType":"StructuredDocumentation","src":"654:268:3","text":"@notice Processes multiple attestations and verifies whether they are valid.\n @param attestations The new attestations.\n @param values Explicit ETH amounts which were sent with each attestation.\n @return Whether all the attestations are valid."},"functionSelector":"91db0b7e","id":450,"implemented":false,"kind":"function","modifiers":[],"name":"multiAttest","nameLocation":"936:11:3","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"attestations","nameLocation":"980:12:3","nodeType":"VariableDeclaration","scope":450,"src":"957:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$49_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":440,"nodeType":"UserDefinedTypeName","pathNode":{"id":439,"name":"Attestation","nameLocations":["957:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"957:11:3"},"referencedDeclaration":49,"src":"957:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"id":441,"nodeType":"ArrayTypeName","src":"957:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$49_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":445,"mutability":"mutable","name":"values","nameLocation":"1021:6:3","nodeType":"VariableDeclaration","scope":450,"src":"1002:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":444,"nodeType":"ArrayTypeName","src":"1002:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"947:86:3"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"1060:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":447,"name":"bool","nodeType":"ElementaryTypeName","src":"1060:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1059:6:3"},"scope":473,"src":"927:139:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1072:205:3","text":"@notice Processes an attestation revocation and verifies if it can be revoked.\n @param attestation The existing attestation to be revoked.\n @return Whether the attestation can be revoked."},"functionSelector":"e49617e1","id":459,"implemented":false,"kind":"function","modifiers":[],"name":"revoke","nameLocation":"1291:6:3","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"attestation","nameLocation":"1319:11:3","nodeType":"VariableDeclaration","scope":459,"src":"1298:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_calldata_ptr","typeString":"struct Attestation"},"typeName":{"id":453,"nodeType":"UserDefinedTypeName","pathNode":{"id":452,"name":"Attestation","nameLocations":["1298:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"1298:11:3"},"referencedDeclaration":49,"src":"1298:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"1297:34:3"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":459,"src":"1358:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"1358:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1357:6:3"},"scope":473,"src":"1282:82:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"1370:297:3","text":"@notice Processes revocation of multiple attestation and verifies they can be revoked.\n @param attestations The existing attestations to be revoked.\n @param values Explicit ETH amounts which were sent with each revocation.\n @return Whether the attestations can be revoked."},"functionSelector":"88e5b2d9","id":472,"implemented":false,"kind":"function","modifiers":[],"name":"multiRevoke","nameLocation":"1681:11:3","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"attestations","nameLocation":"1725:12:3","nodeType":"VariableDeclaration","scope":472,"src":"1702:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$49_calldata_ptr_$dyn_calldata_ptr","typeString":"struct Attestation[]"},"typeName":{"baseType":{"id":462,"nodeType":"UserDefinedTypeName","pathNode":{"id":461,"name":"Attestation","nameLocations":["1702:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"1702:11:3"},"referencedDeclaration":49,"src":"1702:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"id":463,"nodeType":"ArrayTypeName","src":"1702:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Attestation_$49_storage_$dyn_storage_ptr","typeString":"struct Attestation[]"}},"visibility":"internal"},{"constant":false,"id":467,"mutability":"mutable","name":"values","nameLocation":"1766:6:3","nodeType":"VariableDeclaration","scope":472,"src":"1747:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":466,"nodeType":"ArrayTypeName","src":"1747:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1692:86:3"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":472,"src":"1805:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":469,"name":"bool","nodeType":"ElementaryTypeName","src":"1805:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1804:6:3"},"scope":473,"src":"1672:139:3","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":474,"src":"189:1624:3","usedErrors":[],"usedEvents":[]}],"src":"33:1781:3"},"id":3},"src/Condition.sol":{"ast":{"absolutePath":"src/Condition.sol","exportedSymbols":{"Attestation":[49],"AttestationRequest":[93],"AttestationRequestData":[86],"Condition":[596],"EMPTY_UID":[4],"IEAS":[368],"ISchemaRegistry":[417],"ISchemaResolver":[473],"NO_EXPIRATION_TIME":[7],"SchemaRecord":[383]},"id":597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":475,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol","file":"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol","id":479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":597,"sourceUnit":369,"src":"58:129:4","symbolAliases":[{"foreign":{"id":476,"name":"IEAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"67:4:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":477,"name":"AttestationRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":93,"src":"73:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":478,"name":"AttestationRequestData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":86,"src":"92:22:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/Common.sol","file":"@ethereum-attestation-service/eas-contracts/contracts/Common.sol","id":483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":597,"sourceUnit":66,"src":"188:125:4","symbolAliases":[{"foreign":{"id":480,"name":"NO_EXPIRATION_TIME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"197:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":481,"name":"EMPTY_UID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"217:9:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":482,"name":"Attestation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49,"src":"227:11:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol","file":"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol","id":486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":597,"sourceUnit":418,"src":"314:121:4","symbolAliases":[{"foreign":{"id":484,"name":"ISchemaRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"323:15:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":485,"name":"SchemaRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"339:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol","file":"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol","id":488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":597,"sourceUnit":474,"src":"436:117:4","symbolAliases":[{"foreign":{"id":487,"name":"ISchemaResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"445:15:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Condition","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":596,"linearizedBaseContracts":[596],"name":"Condition","nameLocation":"564:9:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":494,"mutability":"mutable","name":"_eas","nameLocation":"595:4:4","nodeType":"VariableDeclaration","scope":596,"src":"581:67:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEAS_$368","typeString":"contract IEAS"},"typeName":{"id":490,"nodeType":"UserDefinedTypeName","pathNode":{"id":489,"name":"IEAS","nameLocations":["581:4:4"],"nodeType":"IdentifierPath","referencedDeclaration":368,"src":"581:4:4"},"referencedDeclaration":368,"src":"581:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_IEAS_$368","typeString":"contract IEAS"}},"value":{"arguments":[{"hexValue":"307843323637396642443337643534333838436534393346314442373533323044323336653138313565","id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"605:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xC2679fBD37d54388Ce493F1DB75320D236e1815e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"name":"IEAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"600:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEAS_$368_$","typeString":"type(contract IEAS)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"600:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEAS_$368","typeString":"contract IEAS"}},"visibility":"private"},{"body":{"id":507,"nodeType":"Block","src":"737:61:4","statements":[{"expression":{"arguments":[{"id":504,"name":"attestUid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"773:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":502,"name":"_eas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"753:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_IEAS_$368","typeString":"contract IEAS"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"758:14:4","memberName":"getAttestation","nodeType":"MemberAccess","referencedDeclaration":341,"src":"753:19:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Attestation_$49_memory_ptr_$","typeString":"function (bytes32) view external returns (struct Attestation memory)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation memory"}},"functionReturnParameters":501,"id":506,"nodeType":"Return","src":"746:37:4"}]},"id":508,"implemented":true,"kind":"function","modifiers":[],"name":"getRecepient","nameLocation":"664:12:4","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"attestUid","nameLocation":"685:9:4","nodeType":"VariableDeclaration","scope":508,"src":"677:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"677:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"676:19:4"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":508,"src":"718:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation"},"typeName":{"id":499,"nodeType":"UserDefinedTypeName","pathNode":{"id":498,"name":"Attestation","nameLocations":["718:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"718:11:4"},"referencedDeclaration":49,"src":"718:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_storage_ptr","typeString":"struct Attestation"}},"visibility":"internal"}],"src":"717:20:4"},"scope":596,"src":"655:143:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"873:499:4","statements":[{"assignments":[516,518,520],"declarations":[{"constant":false,"id":516,"mutability":"mutable","name":"to","nameLocation":"892:2:4","nodeType":"VariableDeclaration","scope":594,"src":"884:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"amount","nameLocation":"903:6:4","nodeType":"VariableDeclaration","scope":594,"src":"895:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"uid","nameLocation":"918:3:4","nodeType":"VariableDeclaration","scope":594,"src":"910:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":519,"name":"bytes32","nodeType":"ElementaryTypeName","src":"910:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":532,"initialValue":{"arguments":[{"id":523,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"934:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"940:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","typeDescriptions":{}}},{"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"948:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:4","typeDescriptions":{}}},{"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"956:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"956:7:4","typeDescriptions":{}}}],"id":530,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"939:25:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(uint256),type(bytes32))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes32_$_$","typeString":"tuple(type(address),type(uint256),type(bytes32))"}],"expression":{"id":521,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"923:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"927:6:4","memberName":"decode","nodeType":"MemberAccess","src":"923:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_payable_$_t_uint256_$_t_bytes32_$","typeString":"tuple(address payable,uint256,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"883:82:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"983:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307833433434436444644236613930306661326235383564643239396530336431324641343239334243","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"987:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x3C44CdDdB6a900fa2b585dd299e03d12FA4293BC"},"src":"983:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"975:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"975:55:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"1048:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1056:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1048:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":539,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1040:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1040:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"ExpressionStatement","src":"1040:20:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":547,"name":"uid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"1091:3:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":546,"name":"getRecepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1078:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_struct$_Attestation_$49_memory_ptr_$","typeString":"function (bytes32) view returns (struct Attestation memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation memory"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1096:8:4","memberName":"attester","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1078:26:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307839304637396266364542326334663837303336354537383539383245316631303145393362393036","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1106:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x90F79bf6EB2c4f870365E785982E1f101E93b906"},"src":"1078:70:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":545,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1070:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1070:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"1070:79:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":556,"name":"uid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"1180:3:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":555,"name":"getRecepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1167:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_struct$_Attestation_$49_memory_ptr_$","typeString":"function (bytes32) view returns (struct Attestation memory)"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation memory"}},"id":558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1185:9:4","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":42,"src":"1167:27:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":559,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"1196:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1167:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1159:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1159:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"1159:40:4"},{"assignments":[564,566],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"score","nameLocation":"1218:5:4","nodeType":"VariableDeclaration","scope":594,"src":"1210:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1210:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"isdev","nameLocation":"1229:5:4","nodeType":"VariableDeclaration","scope":594,"src":"1224:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":565,"name":"bool","nodeType":"ElementaryTypeName","src":"1224:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":579,"initialValue":{"arguments":[{"expression":{"arguments":[{"id":570,"name":"uid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"1260:3:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":569,"name":"getRecepient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1247:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_struct$_Attestation_$49_memory_ptr_$","typeString":"function (bytes32) view returns (struct Attestation memory)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1247:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Attestation_$49_memory_ptr","typeString":"struct Attestation memory"}},"id":572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1265:4:4","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":48,"src":"1247:22:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1271:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:4","typeDescriptions":{}}},{"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1279:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":575,"name":"bool","nodeType":"ElementaryTypeName","src":"1279:4:4","typeDescriptions":{}}}],"id":577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1270:14:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(uint256),type(bool))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bool_$_$","typeString":"tuple(type(uint256),type(bool))"}],"expression":{"id":567,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1236:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1240:6:4","memberName":"decode","nodeType":"MemberAccess","src":"1236:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1236:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,bool)"}},"nodeType":"VariableDeclarationStatement","src":"1209:76:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":581,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1303:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3730","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1311:2:4","typeDescriptions":{"typeIdentifier":"t_rational_70_by_1","typeString":"int_const 70"},"value":"70"},"src":"1303:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1295:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"1295:19:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":587,"name":"isdev","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"1332:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1339:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1332:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":586,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"1324:20:4"},{"expression":{"hexValue":"74727565","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1361:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":514,"id":593,"nodeType":"Return","src":"1354:11:4"}]},"functionSelector":"b0c45ec5","id":595,"implemented":true,"kind":"function","modifiers":[],"name":"runCondition","nameLocation":"814:12:4","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"data","nameLocation":"840:4:4","nodeType":"VariableDeclaration","scope":595,"src":"827:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":509,"name":"bytes","nodeType":"ElementaryTypeName","src":"827:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"826:19:4"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"868:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":512,"name":"bool","nodeType":"ElementaryTypeName","src":"868:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"867:6:4"},"scope":596,"src":"805:567:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":597,"src":"555:820:4","usedErrors":[],"usedEvents":[]}],"src":"32:1343:4"},"id":4}},"contracts":{"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol":{"IEAS":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"attester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"uid","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"schemaUID","type":"bytes32"}],"name":"Attested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"address","name":"attester","type":"address"},{"indexed":false,"internalType":"bytes32","name":"uid","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"schemaUID","type":"bytes32"}],"name":"Revoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"revoker","type":"address"},{"indexed":true,"internalType":"bytes32","name":"data","type":"bytes32"},{"indexed":true,"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"RevokedOffchain","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"data","type":"bytes32"},{"indexed":true,"internalType":"uint64","name":"timestamp","type":"uint64"}],"name":"Timestamped","type":"event"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct AttestationRequestData","name":"data","type":"tuple"}],"internalType":"struct AttestationRequest","name":"request","type":"tuple"}],"name":"attest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct AttestationRequestData","name":"data","type":"tuple"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct Signature","name":"signature","type":"tuple"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"deadline","type":"uint64"}],"internalType":"struct DelegatedAttestationRequest","name":"delegatedRequest","type":"tuple"}],"name":"attestByDelegation","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"getAttestation","outputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"revoker","type":"address"},{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"getRevokeOffchain","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSchemaRegistry","outputs":[{"internalType":"contract ISchemaRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"getTimestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"isAttestationValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct AttestationRequestData[]","name":"data","type":"tuple[]"}],"internalType":"struct MultiAttestationRequest[]","name":"multiRequests","type":"tuple[]"}],"name":"multiAttest","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct AttestationRequestData[]","name":"data","type":"tuple[]"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct Signature[]","name":"signatures","type":"tuple[]"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"uint64","name":"deadline","type":"uint64"}],"internalType":"struct MultiDelegatedAttestationRequest[]","name":"multiDelegatedRequests","type":"tuple[]"}],"name":"multiAttestByDelegation","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct RevocationRequestData[]","name":"data","type":"tuple[]"}],"internalType":"struct MultiRevocationRequest[]","name":"multiRequests","type":"tuple[]"}],"name":"multiRevoke","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct RevocationRequestData[]","name":"data","type":"tuple[]"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct Signature[]","name":"signatures","type":"tuple[]"},{"internalType":"address","name":"revoker","type":"address"},{"internalType":"uint64","name":"deadline","type":"uint64"}],"internalType":"struct MultiDelegatedRevocationRequest[]","name":"multiDelegatedRequests","type":"tuple[]"}],"name":"multiRevokeByDelegation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"data","type":"bytes32[]"}],"name":"multiRevokeOffchain","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"data","type":"bytes32[]"}],"name":"multiTimestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct RevocationRequestData","name":"data","type":"tuple"}],"internalType":"struct RevocationRequest","name":"request","type":"tuple"}],"name":"revoke","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"schema","type":"bytes32"},{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"uint256","name":"value","type":"uint256"}],"internalType":"struct RevocationRequestData","name":"data","type":"tuple"},{"components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct Signature","name":"signature","type":"tuple"},{"internalType":"address","name":"revoker","type":"address"},{"internalType":"uint64","name":"deadline","type":"uint64"}],"internalType":"struct DelegatedRevocationRequest","name":"delegatedRequest","type":"tuple"}],"name":"revokeByDelegation","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"revokeOffchain","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}],"name":"timestamp","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))":"f17325e7","attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))":"3c042715","getAttestation(bytes32)":"a3112a64","getRevokeOffchain(address,bytes32)":"b469318d","getSchemaRegistry()":"f10b5cc8","getTimestamp(bytes32)":"d45c4435","isAttestationValid(bytes32)":"e30bb563","multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])":"44adc90e","multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])":"95411525","multiRevoke((bytes32,(bytes32,uint256)[])[])":"4cb7e9e5","multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])":"0eabf660","multiRevokeOffchain(bytes32[])":"13893f61","multiTimestamp(bytes32[])":"e71ff365","revoke((bytes32,(bytes32,uint256)))":"46926267","revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))":"a6d4dbc7","revokeOffchain(bytes32)":"cf190f34","timestamp(bytes32)":"4d003070"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"RevokedOffchain\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"Timestamped\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedAttestationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"attestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchemaRegistry\",\"outputs\":[{\"internalType\":\"contract ISchemaRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"isAttestationValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiAttestationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct AttestationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedAttestationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiAttestByDelegation\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"}],\"internalType\":\"struct MultiRevocationRequest[]\",\"name\":\"multiRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData[]\",\"name\":\"data\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct MultiDelegatedRevocationRequest[]\",\"name\":\"multiDelegatedRequests\",\"type\":\"tuple[]\"}],\"name\":\"multiRevokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiRevokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"multiTimestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct RevocationRequestData\",\"name\":\"data\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct Signature\",\"name\":\"signature\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"}],\"internalType\":\"struct DelegatedRevocationRequest\",\"name\":\"delegatedRequest\",\"type\":\"tuple\"}],\"name\":\"revokeByDelegation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"revokeOffchain\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"name\":\"timestamp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"Revoked(address,address,bytes32,bytes32)\":{\"params\":{\"attester\":\"The attesting account.\",\"recipient\":\"The recipient of the attestation.\",\"schemaUID\":\"The UID of the schema.\",\"uid\":\"The UID the revoked attestation.\"}},\"RevokedOffchain(address,bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"revoker\":\"The address of the revoker.\",\"timestamp\":\"The timestamp.\"}},\"Timestamped(bytes32,uint64)\":{\"params\":{\"data\":\"The data.\",\"timestamp\":\"The timestamp.\"}}},\"kind\":\"dev\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"params\":{\"request\":\"The arguments of the attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attest({         schema: \\\"0facc36681cbe2456019c1b0d1e7bedd6d1d40f6f324bf3dd3a4cef2999200a0\\\",         data: {             recipient: \\\"0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf\\\",             expirationTime: 0,             revocable: true,             refUID: \\\"0x0000000000000000000000000000000000000000000000000000000000000000\\\",             data: \\\"0xF00D\\\",             value: 0         }     })\"}},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated attestation request.\"},\"returns\":{\"_0\":\"The UID of the new attestation. Example:     attestByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         signature: {             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         attester: '0xc5E8740aD971409492b1A63Db8d83025e0Fc427e',         deadline: 1673891048     })\"}},\"getAttestation(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"The attestation data members.\"}},\"getRevokeOffchain(address,bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"getSchemaRegistry()\":{\"returns\":{\"_0\":\"The address of the global schema registry.\"}},\"getTimestamp(bytes32)\":{\"params\":{\"data\":\"The data to query.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"isAttestationValid(bytes32)\":{\"params\":{\"uid\":\"The UID of the attestation to retrieve.\"},\"returns\":{\"_0\":\"Whether an attestation exists.\"}},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi attestation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttest([{         schema: '0x33e9094830a5cba5554d1954310e4fbed2ef5f859ec1404619adea4207f391fd',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 1000         },         {             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 0,             revocable: false,             refUID: '0x480df4a039efc31b11bfdf491b383ca138b6bde160988222a2a3509c02cee174',             data: '0x00',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: true,             refUID: '0x75bf2ed8dca25a8190c50c52db136664de25b2449535839008ccfdab469b214f',             data: '0x12345678',             value: 0         },     }])\"}},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi attestation requests. The requests should be     grouped by distinct schema ids to benefit from the best batching optimization.\"},\"returns\":{\"_0\":\"The UIDs of the new attestations. Example:     multiAttestByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             recipient: '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266',             expirationTime: 1673891048,             revocable: true,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x1234',             value: 0         },         {             recipient: '0xdEADBeAFdeAdbEafdeadbeafDeAdbEAFdeadbeaf',             expirationTime: 0,             revocable: false,             refUID: '0x0000000000000000000000000000000000000000000000000000000000000000',             data: '0x00',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         attester: '0x1D86495b2A7B524D747d2839b3C645Bed32e8CF4',         deadline: 1673891048     }])\"}},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"params\":{\"multiRequests\":\"The arguments of the multi revocation requests. The requests should be grouped by distinct     schema ids to benefit from the best batching optimization. Example:     multiRevoke([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],     },     {         schema: '0x5ac273ce41e3c8bfa383efe7c03e54c5f0bff29c9f11ef6ffa930fc84ca32425',         data: [{             uid: '0x053d42abce1fd7c8fcddfae21845ad34dae287b2c326220b03ba241bc5a8f019',             value: 0         },     }])\"}},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"params\":{\"multiDelegatedRequests\":\"The arguments of the delegated multi revocation attestation requests. The requests     should be grouped by distinct schema ids to benefit from the best batching optimization. Example:     multiRevokeByDelegation([{         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: [{             uid: '0x211296a1ca0d7f9f2cfebf0daaa575bea9b20e968d81aef4e743d699c6ac4b25',             value: 1000         },         {             uid: '0xe160ac1bd3606a287b4d53d5d1d6da5895f65b4b4bab6d93aaf5046e48167ade',             value: 0         }],         signatures: [{             v: 28,             r: '0x148c...b25b',             s: '0x5a72...be22'         },         {             v: 28,             r: '0x487s...67bb',             s: '0x12ad...2366'         }],         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     }])\"}},\"multiRevokeOffchain(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"multiTimestamp(bytes32[])\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}},\"revoke((bytes32,(bytes32,uint256)))\":{\"params\":{\"request\":\"The arguments of the revocation request. Example:     revoke({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0x101032e487642ee04ee17049f99a70590c735b8614079fc9275f9dd57c00966d',             value: 0         }     })\"}},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"params\":{\"delegatedRequest\":\"The arguments of the delegated revocation request. Example:     revokeByDelegation({         schema: '0x8e72f5bc0a8d4be6aa98360baa889040c50a0e51f32dbf0baa5199bd93472ebc',         data: {             uid: '0xcbbc12102578c642a0f7b34fe7111e41afa25683b6cd7b5a14caf90fa14d24ba',             value: 0         },         signature: {             v: 27,             r: '0xb593...7142',             s: '0x0f5b...2cce'         },         revoker: '0x244934dd3e31bE2c81f84ECf0b3E6329F5381992',         deadline: 1673891048     })\"}},\"revokeOffchain(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was revoked with.\"}},\"timestamp(bytes32)\":{\"params\":{\"data\":\"The data to timestamp.\"},\"returns\":{\"_0\":\"The timestamp the data was timestamped with.\"}}},\"title\":\"IEAS\",\"version\":1},\"userdoc\":{\"events\":{\"Attested(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been made.\"},\"Revoked(address,address,bytes32,bytes32)\":{\"notice\":\"Emitted when an attestation has been revoked.\"},\"RevokedOffchain(address,bytes32,uint64)\":{\"notice\":\"Emitted when a data has been revoked.\"},\"Timestamped(bytes32,uint64)\":{\"notice\":\"Emitted when a data has been timestamped.\"}},\"kind\":\"user\",\"methods\":{\"attest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)))\":{\"notice\":\"Attests to a specific schema.\"},\"attestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Attests to a specific schema via the provided ECDSA signature.\"},\"getAttestation(bytes32)\":{\"notice\":\"Returns an existing attestation by UID.\"},\"getRevokeOffchain(address,bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"getSchemaRegistry()\":{\"notice\":\"Returns the address of the global schema registry.\"},\"getTimestamp(bytes32)\":{\"notice\":\"Returns the timestamp that the specified data was timestamped with.\"},\"isAttestationValid(bytes32)\":{\"notice\":\"Checks whether an attestation exists.\"},\"multiAttest((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[])[])\":{\"notice\":\"Attests to multiple schemas.\"},\"multiAttestByDelegation((bytes32,(address,uint64,bool,bytes32,bytes,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Attests to multiple schemas using via provided ECDSA signatures.\"},\"multiRevoke((bytes32,(bytes32,uint256)[])[])\":{\"notice\":\"Revokes existing attestations to multiple schemas.\"},\"multiRevokeByDelegation((bytes32,(bytes32,uint256)[],(uint8,bytes32,bytes32)[],address,uint64)[])\":{\"notice\":\"Revokes existing attestations to multiple schemas via provided ECDSA signatures.\"},\"multiRevokeOffchain(bytes32[])\":{\"notice\":\"Revokes the specified multiple bytes32 data.\"},\"multiTimestamp(bytes32[])\":{\"notice\":\"Timestamps the specified multiple bytes32 data.\"},\"revoke((bytes32,(bytes32,uint256)))\":{\"notice\":\"Revokes an existing attestation to a specific schema.\"},\"revokeByDelegation((bytes32,(bytes32,uint256),(uint8,bytes32,bytes32),address,uint64))\":{\"notice\":\"Revokes an existing attestation to a specific schema via the provided ECDSA signature.\"},\"revokeOffchain(bytes32)\":{\"notice\":\"Revokes the specified bytes32 data.\"},\"timestamp(bytes32)\":{\"notice\":\"Timestamps the specified bytes32 data.\"}},\"notice\":\"EAS - Ethereum Attestation Service interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":\"IEAS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]}},\"version\":1}"}},"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol":{"ISchemaRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"uid","type":"bytes32"},{"indexed":true,"internalType":"address","name":"registerer","type":"address"},{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}],"indexed":false,"internalType":"struct SchemaRecord","name":"schema","type":"tuple"}],"name":"Registered","type":"event"},{"inputs":[{"internalType":"bytes32","name":"uid","type":"bytes32"}],"name":"getSchema","outputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"string","name":"schema","type":"string"}],"internalType":"struct SchemaRecord","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"schema","type":"string"},{"internalType":"contract ISchemaResolver","name":"resolver","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"}],"name":"register","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getSchema(bytes32)":"a2ea7c6e","register(string,address,bool)":"60d7a278"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}}},\"title\":\"ISchemaRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"notice\":\"Emitted when a new schema has been registered\"}},\"kind\":\"user\",\"methods\":{\"getSchema(bytes32)\":{\"notice\":\"Returns an existing schema by UID\"},\"register(string,address,bool)\":{\"notice\":\"Submits and reserves a new schema\"}},\"notice\":\"The interface of global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":\"ISchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]}},\"version\":1}"}},"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol":{"ISchemaResolver":{"abi":[{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"attest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"isPayable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiAttest","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation[]","name":"attestations","type":"tuple[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"multiRevoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes32","name":"uid","type":"bytes32"},{"internalType":"bytes32","name":"schema","type":"bytes32"},{"internalType":"uint64","name":"time","type":"uint64"},{"internalType":"uint64","name":"expirationTime","type":"uint64"},{"internalType":"uint64","name":"revocationTime","type":"uint64"},{"internalType":"bytes32","name":"refUID","type":"bytes32"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"address","name":"attester","type":"address"},{"internalType":"bool","name":"revocable","type":"bool"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Attestation","name":"attestation","type":"tuple"}],"name":"revoke","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":"e60c3505","isPayable()":"ce46e046","multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":"91db0b7e","multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])":"88e5b2d9","revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))":"e49617e1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"isPayable()\":{\"returns\":{\"_0\":\"Whether the resolver supports ETH transfers.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"title\":\"ISchemaResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Checks if the resolver can be sent ETH.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"}},\"notice\":\"The interface of an optional schema resolver.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":\"ISchemaResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]}},\"version\":1}"}},"src/Condition.sol":{"Condition":{"abi":[{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"runCondition","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405273c2679fbd37d54388ce493f1db75320d236e1815e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610960806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b0c45ec514610030575b600080fd5b61004a6004803603810190610045919061047b565b610060565b60405161005791906104df565b60405180910390f35b6000806000808480602001905181019061007a91906105c4565b925092509250733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146100cc57600080fd5b60648211156100da57600080fd5b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff1661010e826101cb565b60e0015173ffffffffffffffffffffffffffffffffffffffff161461013257600080fd5b8273ffffffffffffffffffffffffffffffffffffffff16610152826101cb565b60c0015173ffffffffffffffffffffffffffffffffffffffff161461017657600080fd5b600080610182836101cb565b610120015180602001905181019061019a9190610643565b9150915060468210156101ac57600080fd5b60011515811515146101bd57600080fd5b600195505050505050919050565b6101d3610279565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3112a64836040518263ffffffff1660e01b815260040161022c9190610692565b600060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061027291906108e1565b9050919050565b6040518061014001604052806000801916815260200160008019168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103888261033f565b810181811067ffffffffffffffff821117156103a7576103a6610350565b5b80604052505050565b60006103ba610321565b90506103c6828261037f565b919050565b600067ffffffffffffffff8211156103e6576103e5610350565b5b6103ef8261033f565b9050602081019050919050565b82818337600083830152505050565b600061041e610419846103cb565b6103b0565b90508281526020810184848401111561043a5761043961033a565b5b6104458482856103fc565b509392505050565b600082601f83011261046257610461610335565b5b813561047284826020860161040b565b91505092915050565b6000602082840312156104915761049061032b565b5b600082013567ffffffffffffffff8111156104af576104ae610330565b5b6104bb8482850161044d565b91505092915050565b60008115159050919050565b6104d9816104c4565b82525050565b60006020820190506104f460008301846104d0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610525826104fa565b9050919050565b6105358161051a565b811461054057600080fd5b50565b6000815190506105528161052c565b92915050565b6000819050919050565b61056b81610558565b811461057657600080fd5b50565b60008151905061058881610562565b92915050565b6000819050919050565b6105a18161058e565b81146105ac57600080fd5b50565b6000815190506105be81610598565b92915050565b6000806000606084860312156105dd576105dc61032b565b5b60006105eb86828701610543565b93505060206105fc86828701610579565b925050604061060d868287016105af565b9150509250925092565b610620816104c4565b811461062b57600080fd5b50565b60008151905061063d81610617565b92915050565b6000806040838503121561065a5761065961032b565b5b600061066885828601610579565b92505060206106798582860161062e565b9150509250929050565b61068c8161058e565b82525050565b60006020820190506106a76000830184610683565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b6106d4816106b7565b81146106df57600080fd5b50565b6000815190506106f1816106cb565b92915050565b6000610702826104fa565b9050919050565b610712816106f7565b811461071d57600080fd5b50565b60008151905061072f81610709565b92915050565b60005b83811015610753578082015181840152602081019050610738565b60008484015250505050565b600061077261076d846103cb565b6103b0565b90508281526020810184848401111561078e5761078d61033a565b5b610799848285610735565b509392505050565b600082601f8301126107b6576107b5610335565b5b81516107c684826020860161075f565b91505092915050565b600061014082840312156107e6576107e56106ad565b5b6107f16101406103b0565b90506000610801848285016105af565b6000830152506020610815848285016105af565b6020830152506040610829848285016106e2565b604083015250606061083d848285016106e2565b6060830152506080610851848285016106e2565b60808301525060a0610865848285016105af565b60a08301525060c061087984828501610720565b60c08301525060e061088d84828501610720565b60e0830152506101006108a28482850161062e565b6101008301525061012082015167ffffffffffffffff8111156108c8576108c76106b2565b5b6108d4848285016107a1565b6101208301525092915050565b6000602082840312156108f7576108f661032b565b5b600082015167ffffffffffffffff81111561091557610914610330565b5b610921848285016107cf565b9150509291505056fea264697066735822122016f869e10b215f902aaee6f9e2259cb100dbb7be7d5b5cc32241f678ddd7bcdf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xC2679FBD37D54388CE493F1DB75320D236E1815E PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x960 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0C45EC5 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x152 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x182 DUP4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x120 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x46 DUP3 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3112A64 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x388 DUP3 PUSH2 0x33F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x3A6 PUSH2 0x350 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA PUSH2 0x321 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C6 DUP3 DUP3 PUSH2 0x37F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x350 JUMP JUMPDEST JUMPDEST PUSH2 0x3EF DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 DUP5 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH2 0x445 DUP5 DUP3 DUP6 PUSH2 0x3FC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x335 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x472 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AF JUMPI PUSH2 0x4AE PUSH2 0x330 JUMP JUMPDEST JUMPDEST PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x44D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D9 DUP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP2 PUSH2 0x51A JUMP JUMPDEST DUP2 EQ PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x552 DUP2 PUSH2 0x52C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56B DUP2 PUSH2 0x558 JUMP JUMPDEST DUP2 EQ PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x588 DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 DUP2 PUSH2 0x58E JUMP JUMPDEST DUP2 EQ PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5BE DUP2 PUSH2 0x598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH2 0x5DC PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP7 DUP3 DUP8 ADD PUSH2 0x543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5FC DUP7 DUP3 DUP8 ADD PUSH2 0x579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x60D DUP7 DUP3 DUP8 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x620 DUP2 PUSH2 0x4C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63D DUP2 PUSH2 0x617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65A JUMPI PUSH2 0x659 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP6 DUP3 DUP7 ADD PUSH2 0x579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x679 DUP6 DUP3 DUP7 ADD PUSH2 0x62E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x68C DUP2 PUSH2 0x58E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x683 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6F1 DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x72F DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x753 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 PUSH2 0x76D DUP5 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH2 0x799 DUP5 DUP3 DUP6 PUSH2 0x735 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B6 JUMPI PUSH2 0x7B5 PUSH2 0x335 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x7C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x75F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0x6AD JUMP JUMPDEST JUMPDEST PUSH2 0x7F1 PUSH2 0x140 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x801 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x815 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x829 DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x83D DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x851 DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x865 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x879 DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x88D DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x8A2 DUP5 DUP3 DUP6 ADD PUSH2 0x62E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0x6B2 JUMP JUMPDEST JUMPDEST PUSH2 0x8D4 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x915 JUMPI PUSH2 0x914 PUSH2 0x330 JUMP JUMPDEST JUMPDEST PUSH2 0x921 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xF8 PUSH10 0xE10B215F902AAEE6F9E2 0x25 SWAP13 0xB1 STOP 0xDB 0xB7 0xBE PUSH30 0x5B5CC32241F678DDD7BCDF64736F6C634300081400330000000000000000 ","sourceMap":"555:820:4:-:0;;;605:42;581:67;;;;;;;;;;;;;;;;;;;;555:820;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getRecepient_508":{"entryPoint":459,"id":508,"parameterSlots":1,"returnSlots":1},"@runCondition_595":{"entryPoint":96,"id":595,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":1035,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1887,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1824,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_payable_fromMemory":{"entryPoint":1347,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":1582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":1101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Attestation_$49_memory_ptr_fromMemory":{"entryPoint":1999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256t_bytes32_fromMemory":{"entryPoint":1476,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Attestation_$49_memory_ptr_fromMemory":{"entryPoint":2273,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bool_fromMemory":{"entryPoint":1603,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":1232,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1667,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":1247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":1682,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":944,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":801,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":971,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1783,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":1306,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":1220,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1422,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1274,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1368,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1719,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1020,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1845,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":895,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":848,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":821,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":1709,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":1714,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":826,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":816,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":811,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":831,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1801,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address_payable":{"entryPoint":1324,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":1559,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1432,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1739,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11419:5","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:5","statements":[{"nodeType":"YulAssignment","src":"57:19:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:5","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:5"},"nodeType":"YulFunctionCall","src":"67:9:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:5"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:5","type":""}],"src":"7:75:5"},{"body":{"nodeType":"YulBlock","src":"177:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:5"},"nodeType":"YulFunctionCall","src":"187:12:5"},"nodeType":"YulExpressionStatement","src":"187:12:5"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:5"},{"body":{"nodeType":"YulBlock","src":"300:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:5"},"nodeType":"YulFunctionCall","src":"310:12:5"},"nodeType":"YulExpressionStatement","src":"310:12:5"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:5"},{"body":{"nodeType":"YulBlock","src":"423:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:5"},"nodeType":"YulFunctionCall","src":"433:12:5"},"nodeType":"YulExpressionStatement","src":"433:12:5"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:5"},{"body":{"nodeType":"YulBlock","src":"546:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:5"},"nodeType":"YulFunctionCall","src":"556:12:5"},"nodeType":"YulExpressionStatement","src":"556:12:5"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:5"},{"body":{"nodeType":"YulBlock","src":"628:54:5","statements":[{"nodeType":"YulAssignment","src":"638:38:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:5"},"nodeType":"YulFunctionCall","src":"652:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:5"},"nodeType":"YulFunctionCall","src":"668:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:5"},"nodeType":"YulFunctionCall","src":"648:28:5"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:5"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:5","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:5","type":""}],"src":"580:102:5"},{"body":{"nodeType":"YulBlock","src":"716:152:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:5","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:5"},"nodeType":"YulFunctionCall","src":"726:88:5"},"nodeType":"YulExpressionStatement","src":"726:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:5","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:5","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:5"},"nodeType":"YulFunctionCall","src":"823:15:5"},"nodeType":"YulExpressionStatement","src":"823:15:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:5","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:5"},"nodeType":"YulFunctionCall","src":"847:15:5"},"nodeType":"YulExpressionStatement","src":"847:15:5"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:5"},{"body":{"nodeType":"YulBlock","src":"917:238:5","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:5","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:5"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:5"},"nodeType":"YulFunctionCall","src":"957:27:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:5"},"nodeType":"YulFunctionCall","src":"945:40:5"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:5"},"nodeType":"YulFunctionCall","src":"1098:18:5"},"nodeType":"YulExpressionStatement","src":"1098:18:5"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:5"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:5"},"nodeType":"YulFunctionCall","src":"1036:34:5"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:5"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:5"},"nodeType":"YulFunctionCall","src":"1072:22:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:5"},"nodeType":"YulFunctionCall","src":"1033:62:5"},"nodeType":"YulIf","src":"1030:88:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:5","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:5"},"nodeType":"YulFunctionCall","src":"1127:22:5"},"nodeType":"YulExpressionStatement","src":"1127:22:5"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:5","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:5","type":""}],"src":"874:281:5"},{"body":{"nodeType":"YulBlock","src":"1202:88:5","statements":[{"nodeType":"YulAssignment","src":"1212:30:5","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:5"},"nodeType":"YulFunctionCall","src":"1222:20:5"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:5"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:5"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:5"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:5"},"nodeType":"YulFunctionCall","src":"1251:33:5"},"nodeType":"YulExpressionStatement","src":"1251:33:5"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:5","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:5","type":""}],"src":"1161:129:5"},{"body":{"nodeType":"YulBlock","src":"1362:241:5","statements":[{"body":{"nodeType":"YulBlock","src":"1467:22:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1469:16:5"},"nodeType":"YulFunctionCall","src":"1469:18:5"},"nodeType":"YulExpressionStatement","src":"1469:18:5"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1439:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"1447:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1436:2:5"},"nodeType":"YulFunctionCall","src":"1436:30:5"},"nodeType":"YulIf","src":"1433:56:5"},{"nodeType":"YulAssignment","src":"1499:37:5","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1529:6:5"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1507:21:5"},"nodeType":"YulFunctionCall","src":"1507:29:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1499:4:5"}]},{"nodeType":"YulAssignment","src":"1573:23:5","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1585:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"1591:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1581:3:5"},"nodeType":"YulFunctionCall","src":"1581:15:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1573:4:5"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1346:6:5","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1357:4:5","type":""}],"src":"1296:307:5"},{"body":{"nodeType":"YulBlock","src":"1673:82:5","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1696:3:5"},{"name":"src","nodeType":"YulIdentifier","src":"1701:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1706:6:5"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1683:12:5"},"nodeType":"YulFunctionCall","src":"1683:30:5"},"nodeType":"YulExpressionStatement","src":"1683:30:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1733:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"1738:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1729:3:5"},"nodeType":"YulFunctionCall","src":"1729:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"1747:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1722:6:5"},"nodeType":"YulFunctionCall","src":"1722:27:5"},"nodeType":"YulExpressionStatement","src":"1722:27:5"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1655:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1660:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1665:6:5","type":""}],"src":"1609:146:5"},{"body":{"nodeType":"YulBlock","src":"1844:340:5","statements":[{"nodeType":"YulAssignment","src":"1854:74:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1920:6:5"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"1879:40:5"},"nodeType":"YulFunctionCall","src":"1879:48:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1863:15:5"},"nodeType":"YulFunctionCall","src":"1863:65:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1854:5:5"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1944:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"1951:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1937:6:5"},"nodeType":"YulFunctionCall","src":"1937:21:5"},"nodeType":"YulExpressionStatement","src":"1937:21:5"},{"nodeType":"YulVariableDeclaration","src":"1967:27:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"1982:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"1989:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1978:3:5"},"nodeType":"YulFunctionCall","src":"1978:16:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1971:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2032:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2034:77:5"},"nodeType":"YulFunctionCall","src":"2034:79:5"},"nodeType":"YulExpressionStatement","src":"2034:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2013:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2018:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2009:3:5"},"nodeType":"YulFunctionCall","src":"2009:16:5"},{"name":"end","nodeType":"YulIdentifier","src":"2027:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2006:2:5"},"nodeType":"YulFunctionCall","src":"2006:25:5"},"nodeType":"YulIf","src":"2003:112:5"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2161:3:5"},{"name":"dst","nodeType":"YulIdentifier","src":"2166:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"2171:6:5"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2124:36:5"},"nodeType":"YulFunctionCall","src":"2124:54:5"},"nodeType":"YulExpressionStatement","src":"2124:54:5"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1817:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"1822:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"1830:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1838:5:5","type":""}],"src":"1761:423:5"},{"body":{"nodeType":"YulBlock","src":"2264:277:5","statements":[{"body":{"nodeType":"YulBlock","src":"2313:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2315:77:5"},"nodeType":"YulFunctionCall","src":"2315:79:5"},"nodeType":"YulExpressionStatement","src":"2315:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2292:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2300:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2288:3:5"},"nodeType":"YulFunctionCall","src":"2288:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"2307:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2284:3:5"},"nodeType":"YulFunctionCall","src":"2284:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2277:6:5"},"nodeType":"YulFunctionCall","src":"2277:35:5"},"nodeType":"YulIf","src":"2274:122:5"},{"nodeType":"YulVariableDeclaration","src":"2405:34:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2432:6:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2419:12:5"},"nodeType":"YulFunctionCall","src":"2419:20:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2409:6:5","type":""}]},{"nodeType":"YulAssignment","src":"2448:87:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2508:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2516:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2504:3:5"},"nodeType":"YulFunctionCall","src":"2504:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"2523:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"2531:3:5"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2457:46:5"},"nodeType":"YulFunctionCall","src":"2457:78:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2448:5:5"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2242:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"2250:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2258:5:5","type":""}],"src":"2203:338:5"},{"body":{"nodeType":"YulBlock","src":"2622:432:5","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:5"},"nodeType":"YulFunctionCall","src":"2670:79:5"},"nodeType":"YulExpressionStatement","src":"2670:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:5"},"nodeType":"YulFunctionCall","src":"2639:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:5"},"nodeType":"YulFunctionCall","src":"2635:32:5"},"nodeType":"YulIf","src":"2632:119:5"},{"nodeType":"YulBlock","src":"2761:286:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:45:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2807:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2818:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2803:3:5"},"nodeType":"YulFunctionCall","src":"2803:17:5"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2790:12:5"},"nodeType":"YulFunctionCall","src":"2790:31:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2868:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"2870:77:5"},"nodeType":"YulFunctionCall","src":"2870:79:5"},"nodeType":"YulExpressionStatement","src":"2870:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2840:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"2848:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2837:2:5"},"nodeType":"YulFunctionCall","src":"2837:30:5"},"nodeType":"YulIf","src":"2834:117:5"},{"nodeType":"YulAssignment","src":"2965:72:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3009:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"3020:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:5"},"nodeType":"YulFunctionCall","src":"3005:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3029:7:5"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"2975:29:5"},"nodeType":"YulFunctionCall","src":"2975:62:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2965:6:5"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2592:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2603:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2615:6:5","type":""}],"src":"2547:507:5"},{"body":{"nodeType":"YulBlock","src":"3102:48:5","statements":[{"nodeType":"YulAssignment","src":"3112:32:5","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3137:5:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:5"},"nodeType":"YulFunctionCall","src":"3130:13:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3123:6:5"},"nodeType":"YulFunctionCall","src":"3123:21:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3112:7:5"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3084:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3094:7:5","type":""}],"src":"3060:90:5"},{"body":{"nodeType":"YulBlock","src":"3215:50:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3232:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3252:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3237:14:5"},"nodeType":"YulFunctionCall","src":"3237:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:5"},"nodeType":"YulFunctionCall","src":"3225:34:5"},"nodeType":"YulExpressionStatement","src":"3225:34:5"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3203:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3210:3:5","type":""}],"src":"3156:109:5"},{"body":{"nodeType":"YulBlock","src":"3363:118:5","statements":[{"nodeType":"YulAssignment","src":"3373:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3385:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3396:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3381:3:5"},"nodeType":"YulFunctionCall","src":"3381:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3373:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3447:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3460:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"3471:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3456:3:5"},"nodeType":"YulFunctionCall","src":"3456:17:5"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3409:37:5"},"nodeType":"YulFunctionCall","src":"3409:65:5"},"nodeType":"YulExpressionStatement","src":"3409:65:5"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3335:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3347:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3358:4:5","type":""}],"src":"3271:210:5"},{"body":{"nodeType":"YulBlock","src":"3532:81:5","statements":[{"nodeType":"YulAssignment","src":"3542:65:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3557:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"3564:42:5","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3553:3:5"},"nodeType":"YulFunctionCall","src":"3553:54:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3542:7:5"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3514:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3524:7:5","type":""}],"src":"3487:126:5"},{"body":{"nodeType":"YulBlock","src":"3672:51:5","statements":[{"nodeType":"YulAssignment","src":"3682:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3711:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3693:17:5"},"nodeType":"YulFunctionCall","src":"3693:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3682:7:5"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3654:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3664:7:5","type":""}],"src":"3619:104:5"},{"body":{"nodeType":"YulBlock","src":"3780:87:5","statements":[{"body":{"nodeType":"YulBlock","src":"3845:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3854:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3857:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3847:6:5"},"nodeType":"YulFunctionCall","src":"3847:12:5"},"nodeType":"YulExpressionStatement","src":"3847:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3803:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3836:5:5"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"3810:25:5"},"nodeType":"YulFunctionCall","src":"3810:32:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3800:2:5"},"nodeType":"YulFunctionCall","src":"3800:43:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3793:6:5"},"nodeType":"YulFunctionCall","src":"3793:51:5"},"nodeType":"YulIf","src":"3790:71:5"}]},"name":"validator_revert_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3773:5:5","type":""}],"src":"3729:138:5"},{"body":{"nodeType":"YulBlock","src":"3944:88:5","statements":[{"nodeType":"YulAssignment","src":"3954:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3969:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3963:5:5"},"nodeType":"YulFunctionCall","src":"3963:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3954:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4020:5:5"}],"functionName":{"name":"validator_revert_t_address_payable","nodeType":"YulIdentifier","src":"3985:34:5"},"nodeType":"YulFunctionCall","src":"3985:41:5"},"nodeType":"YulExpressionStatement","src":"3985:41:5"}]},"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3922:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"3930:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3938:5:5","type":""}],"src":"3873:159:5"},{"body":{"nodeType":"YulBlock","src":"4083:32:5","statements":[{"nodeType":"YulAssignment","src":"4093:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"4104:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4093:7:5"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4065:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4075:7:5","type":""}],"src":"4038:77:5"},{"body":{"nodeType":"YulBlock","src":"4164:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"4221:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4233:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4223:6:5"},"nodeType":"YulFunctionCall","src":"4223:12:5"},"nodeType":"YulExpressionStatement","src":"4223:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4187:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4212:5:5"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4194:17:5"},"nodeType":"YulFunctionCall","src":"4194:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4184:2:5"},"nodeType":"YulFunctionCall","src":"4184:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4177:6:5"},"nodeType":"YulFunctionCall","src":"4177:43:5"},"nodeType":"YulIf","src":"4174:63:5"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4157:5:5","type":""}],"src":"4121:122:5"},{"body":{"nodeType":"YulBlock","src":"4312:80:5","statements":[{"nodeType":"YulAssignment","src":"4322:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4337:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4331:5:5"},"nodeType":"YulFunctionCall","src":"4331:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4322:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4380:5:5"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4353:26:5"},"nodeType":"YulFunctionCall","src":"4353:33:5"},"nodeType":"YulExpressionStatement","src":"4353:33:5"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4290:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4298:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4306:5:5","type":""}],"src":"4249:143:5"},{"body":{"nodeType":"YulBlock","src":"4443:32:5","statements":[{"nodeType":"YulAssignment","src":"4453:16:5","value":{"name":"value","nodeType":"YulIdentifier","src":"4464:5:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4453:7:5"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4425:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4435:7:5","type":""}],"src":"4398:77:5"},{"body":{"nodeType":"YulBlock","src":"4524:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"4581:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4590:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4593:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4583:6:5"},"nodeType":"YulFunctionCall","src":"4583:12:5"},"nodeType":"YulExpressionStatement","src":"4583:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4547:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4572:5:5"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4554:17:5"},"nodeType":"YulFunctionCall","src":"4554:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4544:2:5"},"nodeType":"YulFunctionCall","src":"4544:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4537:6:5"},"nodeType":"YulFunctionCall","src":"4537:43:5"},"nodeType":"YulIf","src":"4534:63:5"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4517:5:5","type":""}],"src":"4481:122:5"},{"body":{"nodeType":"YulBlock","src":"4672:80:5","statements":[{"nodeType":"YulAssignment","src":"4682:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4691:5:5"},"nodeType":"YulFunctionCall","src":"4691:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4682:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4740:5:5"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4713:26:5"},"nodeType":"YulFunctionCall","src":"4713:33:5"},"nodeType":"YulExpressionStatement","src":"4713:33:5"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4650:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"4658:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4666:5:5","type":""}],"src":"4609:143:5"},{"body":{"nodeType":"YulBlock","src":"4877:560:5","statements":[{"body":{"nodeType":"YulBlock","src":"4923:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4925:77:5"},"nodeType":"YulFunctionCall","src":"4925:79:5"},"nodeType":"YulExpressionStatement","src":"4925:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4898:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"4907:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4894:3:5"},"nodeType":"YulFunctionCall","src":"4894:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"4919:2:5","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4890:3:5"},"nodeType":"YulFunctionCall","src":"4890:32:5"},"nodeType":"YulIf","src":"4887:119:5"},{"nodeType":"YulBlock","src":"5016:136:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5031:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"5045:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5035:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5060:82:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5114:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"5125:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5110:3:5"},"nodeType":"YulFunctionCall","src":"5110:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5134:7:5"}],"functionName":{"name":"abi_decode_t_address_payable_fromMemory","nodeType":"YulIdentifier","src":"5070:39:5"},"nodeType":"YulFunctionCall","src":"5070:72:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5060:6:5"}]}]},{"nodeType":"YulBlock","src":"5162:129:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5177:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"5191:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5181:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5207:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5253:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"5264:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5249:3:5"},"nodeType":"YulFunctionCall","src":"5249:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5273:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5217:31:5"},"nodeType":"YulFunctionCall","src":"5217:64:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5207:6:5"}]}]},{"nodeType":"YulBlock","src":"5301:129:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5316:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"5330:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5320:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5346:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5392:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"5403:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5388:3:5"},"nodeType":"YulFunctionCall","src":"5388:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5412:7:5"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"5356:31:5"},"nodeType":"YulFunctionCall","src":"5356:64:5"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5346:6:5"}]}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4831:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4842:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4854:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4862:6:5","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4870:6:5","type":""}],"src":"4758:679:5"},{"body":{"nodeType":"YulBlock","src":"5483:76:5","statements":[{"body":{"nodeType":"YulBlock","src":"5537:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5546:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5549:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5539:6:5"},"nodeType":"YulFunctionCall","src":"5539:12:5"},"nodeType":"YulExpressionStatement","src":"5539:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5506:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5528:5:5"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5513:14:5"},"nodeType":"YulFunctionCall","src":"5513:21:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5503:2:5"},"nodeType":"YulFunctionCall","src":"5503:32:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5496:6:5"},"nodeType":"YulFunctionCall","src":"5496:40:5"},"nodeType":"YulIf","src":"5493:60:5"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5476:5:5","type":""}],"src":"5443:116:5"},{"body":{"nodeType":"YulBlock","src":"5625:77:5","statements":[{"nodeType":"YulAssignment","src":"5635:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5650:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5644:5:5"},"nodeType":"YulFunctionCall","src":"5644:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5635:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5690:5:5"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"5666:23:5"},"nodeType":"YulFunctionCall","src":"5666:30:5"},"nodeType":"YulExpressionStatement","src":"5666:30:5"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5603:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"5611:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5619:5:5","type":""}],"src":"5565:137:5"},{"body":{"nodeType":"YulBlock","src":"5799:410:5","statements":[{"body":{"nodeType":"YulBlock","src":"5845:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5847:77:5"},"nodeType":"YulFunctionCall","src":"5847:79:5"},"nodeType":"YulExpressionStatement","src":"5847:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5820:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"5829:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5816:3:5"},"nodeType":"YulFunctionCall","src":"5816:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"5841:2:5","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5812:3:5"},"nodeType":"YulFunctionCall","src":"5812:32:5"},"nodeType":"YulIf","src":"5809:119:5"},{"nodeType":"YulBlock","src":"5938:128:5","statements":[{"nodeType":"YulVariableDeclaration","src":"5953:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"5967:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5957:6:5","type":""}]},{"nodeType":"YulAssignment","src":"5982:74:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6028:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6039:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6024:3:5"},"nodeType":"YulFunctionCall","src":"6024:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6048:7:5"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"5992:31:5"},"nodeType":"YulFunctionCall","src":"5992:64:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5982:6:5"}]}]},{"nodeType":"YulBlock","src":"6076:126:5","statements":[{"nodeType":"YulVariableDeclaration","src":"6091:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"6105:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6095:6:5","type":""}]},{"nodeType":"YulAssignment","src":"6121:71:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6164:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"6175:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6160:3:5"},"nodeType":"YulFunctionCall","src":"6160:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6184:7:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"6131:28:5"},"nodeType":"YulFunctionCall","src":"6131:61:5"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6121:6:5"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5761:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5772:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5784:6:5","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5792:6:5","type":""}],"src":"5708:501:5"},{"body":{"nodeType":"YulBlock","src":"6280:53:5","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6297:3:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6320:5:5"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6302:17:5"},"nodeType":"YulFunctionCall","src":"6302:24:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6290:6:5"},"nodeType":"YulFunctionCall","src":"6290:37:5"},"nodeType":"YulExpressionStatement","src":"6290:37:5"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6268:5:5","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6275:3:5","type":""}],"src":"6215:118:5"},{"body":{"nodeType":"YulBlock","src":"6437:124:5","statements":[{"nodeType":"YulAssignment","src":"6447:26:5","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6459:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6470:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6455:3:5"},"nodeType":"YulFunctionCall","src":"6455:18:5"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6447:4:5"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6527:6:5"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6540:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"6551:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6536:3:5"},"nodeType":"YulFunctionCall","src":"6536:17:5"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"6483:43:5"},"nodeType":"YulFunctionCall","src":"6483:71:5"},"nodeType":"YulExpressionStatement","src":"6483:71:5"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6409:9:5","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6421:6:5","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6432:4:5","type":""}],"src":"6339:222:5"},{"body":{"nodeType":"YulBlock","src":"6656:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6673:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6676:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6666:6:5"},"nodeType":"YulFunctionCall","src":"6666:12:5"},"nodeType":"YulExpressionStatement","src":"6666:12:5"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"6567:117:5"},{"body":{"nodeType":"YulBlock","src":"6779:28:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6796:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6799:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6789:6:5"},"nodeType":"YulFunctionCall","src":"6789:12:5"},"nodeType":"YulExpressionStatement","src":"6789:12:5"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"6690:117:5"},{"body":{"nodeType":"YulBlock","src":"6857:57:5","statements":[{"nodeType":"YulAssignment","src":"6867:41:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6882:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"6889:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6878:3:5"},"nodeType":"YulFunctionCall","src":"6878:30:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6867:7:5"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6839:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6849:7:5","type":""}],"src":"6813:101:5"},{"body":{"nodeType":"YulBlock","src":"6962:78:5","statements":[{"body":{"nodeType":"YulBlock","src":"7018:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7027:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7030:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7020:6:5"},"nodeType":"YulFunctionCall","src":"7020:12:5"},"nodeType":"YulExpressionStatement","src":"7020:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6985:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7009:5:5"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"6992:16:5"},"nodeType":"YulFunctionCall","src":"6992:23:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6982:2:5"},"nodeType":"YulFunctionCall","src":"6982:34:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6975:6:5"},"nodeType":"YulFunctionCall","src":"6975:42:5"},"nodeType":"YulIf","src":"6972:62:5"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6955:5:5","type":""}],"src":"6920:120:5"},{"body":{"nodeType":"YulBlock","src":"7108:79:5","statements":[{"nodeType":"YulAssignment","src":"7118:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7133:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7127:5:5"},"nodeType":"YulFunctionCall","src":"7127:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7118:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7175:5:5"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"7149:25:5"},"nodeType":"YulFunctionCall","src":"7149:32:5"},"nodeType":"YulExpressionStatement","src":"7149:32:5"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7086:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"7094:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7102:5:5","type":""}],"src":"7046:141:5"},{"body":{"nodeType":"YulBlock","src":"7238:51:5","statements":[{"nodeType":"YulAssignment","src":"7248:35:5","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7277:5:5"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"7259:17:5"},"nodeType":"YulFunctionCall","src":"7259:24:5"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7248:7:5"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7220:5:5","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7230:7:5","type":""}],"src":"7193:96:5"},{"body":{"nodeType":"YulBlock","src":"7338:79:5","statements":[{"body":{"nodeType":"YulBlock","src":"7395:16:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7404:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7407:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7397:6:5"},"nodeType":"YulFunctionCall","src":"7397:12:5"},"nodeType":"YulExpressionStatement","src":"7397:12:5"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7361:5:5"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7386:5:5"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7368:17:5"},"nodeType":"YulFunctionCall","src":"7368:24:5"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7358:2:5"},"nodeType":"YulFunctionCall","src":"7358:35:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7351:6:5"},"nodeType":"YulFunctionCall","src":"7351:43:5"},"nodeType":"YulIf","src":"7348:63:5"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7331:5:5","type":""}],"src":"7295:122:5"},{"body":{"nodeType":"YulBlock","src":"7486:80:5","statements":[{"nodeType":"YulAssignment","src":"7496:22:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7511:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7505:5:5"},"nodeType":"YulFunctionCall","src":"7505:13:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7496:5:5"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7554:5:5"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"7527:26:5"},"nodeType":"YulFunctionCall","src":"7527:33:5"},"nodeType":"YulExpressionStatement","src":"7527:33:5"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7464:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"7472:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7480:5:5","type":""}],"src":"7423:143:5"},{"body":{"nodeType":"YulBlock","src":"7634:184:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7644:10:5","value":{"kind":"number","nodeType":"YulLiteral","src":"7653:1:5","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7648:1:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"7713:63:5","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7738:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"7743:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7734:3:5"},"nodeType":"YulFunctionCall","src":"7734:11:5"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7757:3:5"},{"name":"i","nodeType":"YulIdentifier","src":"7762:1:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7753:3:5"},"nodeType":"YulFunctionCall","src":"7753:11:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7747:5:5"},"nodeType":"YulFunctionCall","src":"7747:18:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7727:6:5"},"nodeType":"YulFunctionCall","src":"7727:39:5"},"nodeType":"YulExpressionStatement","src":"7727:39:5"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7674:1:5"},{"name":"length","nodeType":"YulIdentifier","src":"7677:6:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7671:2:5"},"nodeType":"YulFunctionCall","src":"7671:13:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7685:19:5","statements":[{"nodeType":"YulAssignment","src":"7687:15:5","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7696:1:5"},{"kind":"number","nodeType":"YulLiteral","src":"7699:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7692:3:5"},"nodeType":"YulFunctionCall","src":"7692:10:5"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7687:1:5"}]}]},"pre":{"nodeType":"YulBlock","src":"7667:3:5","statements":[]},"src":"7663:113:5"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7796:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"7801:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7792:3:5"},"nodeType":"YulFunctionCall","src":"7792:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"7810:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7785:6:5"},"nodeType":"YulFunctionCall","src":"7785:27:5"},"nodeType":"YulExpressionStatement","src":"7785:27:5"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7616:3:5","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7621:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"7626:6:5","type":""}],"src":"7572:246:5"},{"body":{"nodeType":"YulBlock","src":"7918:338:5","statements":[{"nodeType":"YulAssignment","src":"7928:74:5","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7994:6:5"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7953:40:5"},"nodeType":"YulFunctionCall","src":"7953:48:5"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7937:15:5"},"nodeType":"YulFunctionCall","src":"7937:65:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7928:5:5"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8018:5:5"},{"name":"length","nodeType":"YulIdentifier","src":"8025:6:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8011:6:5"},"nodeType":"YulFunctionCall","src":"8011:21:5"},"nodeType":"YulExpressionStatement","src":"8011:21:5"},{"nodeType":"YulVariableDeclaration","src":"8041:27:5","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8056:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8063:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8052:3:5"},"nodeType":"YulFunctionCall","src":"8052:16:5"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8045:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8106:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8108:77:5"},"nodeType":"YulFunctionCall","src":"8108:79:5"},"nodeType":"YulExpressionStatement","src":"8108:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8087:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"8092:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8083:3:5"},"nodeType":"YulFunctionCall","src":"8083:16:5"},{"name":"end","nodeType":"YulIdentifier","src":"8101:3:5"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8080:2:5"},"nodeType":"YulFunctionCall","src":"8080:25:5"},"nodeType":"YulIf","src":"8077:112:5"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8233:3:5"},{"name":"dst","nodeType":"YulIdentifier","src":"8238:3:5"},{"name":"length","nodeType":"YulIdentifier","src":"8243:6:5"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8198:34:5"},"nodeType":"YulFunctionCall","src":"8198:52:5"},"nodeType":"YulExpressionStatement","src":"8198:52:5"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7891:3:5","type":""},{"name":"length","nodeType":"YulTypedName","src":"7896:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"7904:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7912:5:5","type":""}],"src":"7824:432:5"},{"body":{"nodeType":"YulBlock","src":"8347:281:5","statements":[{"body":{"nodeType":"YulBlock","src":"8396:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8398:77:5"},"nodeType":"YulFunctionCall","src":"8398:79:5"},"nodeType":"YulExpressionStatement","src":"8398:79:5"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8375:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8383:4:5","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8371:3:5"},"nodeType":"YulFunctionCall","src":"8371:17:5"},{"name":"end","nodeType":"YulIdentifier","src":"8390:3:5"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8367:3:5"},"nodeType":"YulFunctionCall","src":"8367:27:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8360:6:5"},"nodeType":"YulFunctionCall","src":"8360:35:5"},"nodeType":"YulIf","src":"8357:122:5"},{"nodeType":"YulVariableDeclaration","src":"8488:27:5","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8508:6:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8502:5:5"},"nodeType":"YulFunctionCall","src":"8502:13:5"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8492:6:5","type":""}]},{"nodeType":"YulAssignment","src":"8524:98:5","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8595:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"8603:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:5"},"nodeType":"YulFunctionCall","src":"8591:17:5"},{"name":"length","nodeType":"YulIdentifier","src":"8610:6:5"},{"name":"end","nodeType":"YulIdentifier","src":"8618:3:5"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"8533:57:5"},"nodeType":"YulFunctionCall","src":"8533:89:5"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8524:5:5"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8325:6:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"8333:3:5","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8341:5:5","type":""}],"src":"8275:353:5"},{"body":{"nodeType":"YulBlock","src":"8753:2099:5","statements":[{"body":{"nodeType":"YulBlock","src":"8799:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"8801:77:5"},"nodeType":"YulFunctionCall","src":"8801:79:5"},"nodeType":"YulExpressionStatement","src":"8801:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"8774:3:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"8779:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8770:3:5"},"nodeType":"YulFunctionCall","src":"8770:19:5"},{"kind":"number","nodeType":"YulLiteral","src":"8791:6:5","type":"","value":"0x0140"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8766:3:5"},"nodeType":"YulFunctionCall","src":"8766:32:5"},"nodeType":"YulIf","src":"8763:119:5"},{"nodeType":"YulAssignment","src":"8891:32:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:6:5","type":"","value":"0x0140"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8900:15:5"},"nodeType":"YulFunctionCall","src":"8900:23:5"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8891:5:5"}]},{"nodeType":"YulBlock","src":"8933:160:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8967:15:5","value":{"kind":"number","nodeType":"YulLiteral","src":"8981:1:5","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8971:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9007:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9014:4:5","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9003:3:5"},"nodeType":"YulFunctionCall","src":"9003:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9057:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9068:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9053:3:5"},"nodeType":"YulFunctionCall","src":"9053:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9077:3:5"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"9021:31:5"},"nodeType":"YulFunctionCall","src":"9021:60:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8996:6:5"},"nodeType":"YulFunctionCall","src":"8996:86:5"},"nodeType":"YulExpressionStatement","src":"8996:86:5"}]},{"nodeType":"YulBlock","src":"9103:164:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9140:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9154:2:5","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9144:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9181:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9188:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9177:3:5"},"nodeType":"YulFunctionCall","src":"9177:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9231:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9242:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9227:3:5"},"nodeType":"YulFunctionCall","src":"9227:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9251:3:5"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"9195:31:5"},"nodeType":"YulFunctionCall","src":"9195:60:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9170:6:5"},"nodeType":"YulFunctionCall","src":"9170:86:5"},"nodeType":"YulExpressionStatement","src":"9170:86:5"}]},{"nodeType":"YulBlock","src":"9277:161:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9312:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9326:2:5","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9316:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9353:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9360:4:5","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9349:3:5"},"nodeType":"YulFunctionCall","src":"9349:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9402:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9413:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9398:3:5"},"nodeType":"YulFunctionCall","src":"9398:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9422:3:5"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"9367:30:5"},"nodeType":"YulFunctionCall","src":"9367:59:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9342:6:5"},"nodeType":"YulFunctionCall","src":"9342:85:5"},"nodeType":"YulExpressionStatement","src":"9342:85:5"}]},{"nodeType":"YulBlock","src":"9448:171:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:5","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9534:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9541:4:5","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9530:3:5"},"nodeType":"YulFunctionCall","src":"9530:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9583:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9594:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9579:3:5"},"nodeType":"YulFunctionCall","src":"9579:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9603:3:5"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"9548:30:5"},"nodeType":"YulFunctionCall","src":"9548:59:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9523:6:5"},"nodeType":"YulFunctionCall","src":"9523:85:5"},"nodeType":"YulExpressionStatement","src":"9523:85:5"}]},{"nodeType":"YulBlock","src":"9629:172:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9674:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9688:3:5","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9678:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9716:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9723:4:5","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9712:3:5"},"nodeType":"YulFunctionCall","src":"9712:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9765:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9776:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9761:3:5"},"nodeType":"YulFunctionCall","src":"9761:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9785:3:5"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"9730:30:5"},"nodeType":"YulFunctionCall","src":"9730:59:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9705:6:5"},"nodeType":"YulFunctionCall","src":"9705:85:5"},"nodeType":"YulExpressionStatement","src":"9705:85:5"}]},{"nodeType":"YulBlock","src":"9811:165:5","statements":[{"nodeType":"YulVariableDeclaration","src":"9848:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"9862:3:5","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9852:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9890:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9897:4:5","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9886:3:5"},"nodeType":"YulFunctionCall","src":"9886:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:5"},"nodeType":"YulFunctionCall","src":"9936:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"9960:3:5"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"9904:31:5"},"nodeType":"YulFunctionCall","src":"9904:60:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9879:6:5"},"nodeType":"YulFunctionCall","src":"9879:86:5"},"nodeType":"YulExpressionStatement","src":"9879:86:5"}]},{"nodeType":"YulBlock","src":"9986:168:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10026:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10040:3:5","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10030:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10068:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"10075:4:5","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10064:3:5"},"nodeType":"YulFunctionCall","src":"10064:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10118:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10129:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10114:3:5"},"nodeType":"YulFunctionCall","src":"10114:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"10138:3:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"10082:31:5"},"nodeType":"YulFunctionCall","src":"10082:60:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10057:6:5"},"nodeType":"YulFunctionCall","src":"10057:86:5"},"nodeType":"YulExpressionStatement","src":"10057:86:5"}]},{"nodeType":"YulBlock","src":"10164:167:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10203:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10217:3:5","type":"","value":"224"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10207:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10245:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"10252:4:5","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10241:3:5"},"nodeType":"YulFunctionCall","src":"10241:16:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10295:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10306:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10291:3:5"},"nodeType":"YulFunctionCall","src":"10291:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"10315:3:5"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"10259:31:5"},"nodeType":"YulFunctionCall","src":"10259:60:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10234:6:5"},"nodeType":"YulFunctionCall","src":"10234:86:5"},"nodeType":"YulExpressionStatement","src":"10234:86:5"}]},{"nodeType":"YulBlock","src":"10341:167:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10381:17:5","value":{"kind":"number","nodeType":"YulLiteral","src":"10395:3:5","type":"","value":"256"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10385:6:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10423:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"10430:6:5","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10419:3:5"},"nodeType":"YulFunctionCall","src":"10419:18:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10472:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10483:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10468:3:5"},"nodeType":"YulFunctionCall","src":"10468:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"10492:3:5"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"10439:28:5"},"nodeType":"YulFunctionCall","src":"10439:57:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10412:6:5"},"nodeType":"YulFunctionCall","src":"10412:85:5"},"nodeType":"YulExpressionStatement","src":"10412:85:5"}]},{"nodeType":"YulBlock","src":"10518:327:5","statements":[{"nodeType":"YulVariableDeclaration","src":"10553:40:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10577:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"10588:3:5","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10573:3:5"},"nodeType":"YulFunctionCall","src":"10573:19:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10567:5:5"},"nodeType":"YulFunctionCall","src":"10567:26:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10557:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"10640:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"10642:77:5"},"nodeType":"YulFunctionCall","src":"10642:79:5"},"nodeType":"YulExpressionStatement","src":"10642:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10612:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"10620:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10609:2:5"},"nodeType":"YulFunctionCall","src":"10609:30:5"},"nodeType":"YulIf","src":"10606:117:5"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10748:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"10755:6:5","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10744:3:5"},"nodeType":"YulFunctionCall","src":"10744:18:5"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10809:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"10820:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10805:3:5"},"nodeType":"YulFunctionCall","src":"10805:22:5"},{"name":"end","nodeType":"YulIdentifier","src":"10829:3:5"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"10764:40:5"},"nodeType":"YulFunctionCall","src":"10764:69:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10737:6:5"},"nodeType":"YulFunctionCall","src":"10737:97:5"},"nodeType":"YulExpressionStatement","src":"10737:97:5"}]}]},"name":"abi_decode_t_struct$_Attestation_$49_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8728:9:5","type":""},{"name":"end","nodeType":"YulTypedName","src":"8739:3:5","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8747:5:5","type":""}],"src":"8660:2192:5"},{"body":{"nodeType":"YulBlock","src":"10962:454:5","statements":[{"body":{"nodeType":"YulBlock","src":"11008:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11010:77:5"},"nodeType":"YulFunctionCall","src":"11010:79:5"},"nodeType":"YulExpressionStatement","src":"11010:79:5"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10983:7:5"},{"name":"headStart","nodeType":"YulIdentifier","src":"10992:9:5"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10979:3:5"},"nodeType":"YulFunctionCall","src":"10979:23:5"},{"kind":"number","nodeType":"YulLiteral","src":"11004:2:5","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10975:3:5"},"nodeType":"YulFunctionCall","src":"10975:32:5"},"nodeType":"YulIf","src":"10972:119:5"},{"nodeType":"YulBlock","src":"11101:308:5","statements":[{"nodeType":"YulVariableDeclaration","src":"11116:38:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11140:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"11151:1:5","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11136:3:5"},"nodeType":"YulFunctionCall","src":"11136:17:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11130:5:5"},"nodeType":"YulFunctionCall","src":"11130:24:5"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11120:6:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"11201:83:5","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11203:77:5"},"nodeType":"YulFunctionCall","src":"11203:79:5"},"nodeType":"YulExpressionStatement","src":"11203:79:5"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11173:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"11181:18:5","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11170:2:5"},"nodeType":"YulFunctionCall","src":"11170:30:5"},"nodeType":"YulIf","src":"11167:117:5"},{"nodeType":"YulAssignment","src":"11298:101:5","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11371:9:5"},{"name":"offset","nodeType":"YulIdentifier","src":"11382:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11367:3:5"},"nodeType":"YulFunctionCall","src":"11367:22:5"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11391:7:5"}],"functionName":{"name":"abi_decode_t_struct$_Attestation_$49_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"11308:58:5"},"nodeType":"YulFunctionCall","src":"11308:91:5"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11298:6:5"}]}]}]},"name":"abi_decode_tuple_t_struct$_Attestation_$49_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10932:9:5","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10943:7:5","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10955:6:5","type":""}],"src":"10858:558:5"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // struct Attestation\n    function abi_decode_t_struct$_Attestation_$49_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0140) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0140)\n\n        {\n            // uid\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // schema\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // time\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // expirationTime\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // revocationTime\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // refUID\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_bytes32_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // recipient\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // attester\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // revocable\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_bool_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // data\n\n            let offset := mload(add(headStart, 288))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x0120), abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Attestation_$49_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_Attestation_$49_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":5,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063b0c45ec514610030575b600080fd5b61004a6004803603810190610045919061047b565b610060565b60405161005791906104df565b60405180910390f35b6000806000808480602001905181019061007a91906105c4565b925092509250733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146100cc57600080fd5b60648211156100da57600080fd5b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff1661010e826101cb565b60e0015173ffffffffffffffffffffffffffffffffffffffff161461013257600080fd5b8273ffffffffffffffffffffffffffffffffffffffff16610152826101cb565b60c0015173ffffffffffffffffffffffffffffffffffffffff161461017657600080fd5b600080610182836101cb565b610120015180602001905181019061019a9190610643565b9150915060468210156101ac57600080fd5b60011515811515146101bd57600080fd5b600195505050505050919050565b6101d3610279565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3112a64836040518263ffffffff1660e01b815260040161022c9190610692565b600060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061027291906108e1565b9050919050565b6040518061014001604052806000801916815260200160008019168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff168152602001600067ffffffffffffffff16815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103888261033f565b810181811067ffffffffffffffff821117156103a7576103a6610350565b5b80604052505050565b60006103ba610321565b90506103c6828261037f565b919050565b600067ffffffffffffffff8211156103e6576103e5610350565b5b6103ef8261033f565b9050602081019050919050565b82818337600083830152505050565b600061041e610419846103cb565b6103b0565b90508281526020810184848401111561043a5761043961033a565b5b6104458482856103fc565b509392505050565b600082601f83011261046257610461610335565b5b813561047284826020860161040b565b91505092915050565b6000602082840312156104915761049061032b565b5b600082013567ffffffffffffffff8111156104af576104ae610330565b5b6104bb8482850161044d565b91505092915050565b60008115159050919050565b6104d9816104c4565b82525050565b60006020820190506104f460008301846104d0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610525826104fa565b9050919050565b6105358161051a565b811461054057600080fd5b50565b6000815190506105528161052c565b92915050565b6000819050919050565b61056b81610558565b811461057657600080fd5b50565b60008151905061058881610562565b92915050565b6000819050919050565b6105a18161058e565b81146105ac57600080fd5b50565b6000815190506105be81610598565b92915050565b6000806000606084860312156105dd576105dc61032b565b5b60006105eb86828701610543565b93505060206105fc86828701610579565b925050604061060d868287016105af565b9150509250925092565b610620816104c4565b811461062b57600080fd5b50565b60008151905061063d81610617565b92915050565b6000806040838503121561065a5761065961032b565b5b600061066885828601610579565b92505060206106798582860161062e565b9150509250929050565b61068c8161058e565b82525050565b60006020820190506106a76000830184610683565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b6106d4816106b7565b81146106df57600080fd5b50565b6000815190506106f1816106cb565b92915050565b6000610702826104fa565b9050919050565b610712816106f7565b811461071d57600080fd5b50565b60008151905061072f81610709565b92915050565b60005b83811015610753578082015181840152602081019050610738565b60008484015250505050565b600061077261076d846103cb565b6103b0565b90508281526020810184848401111561078e5761078d61033a565b5b610799848285610735565b509392505050565b600082601f8301126107b6576107b5610335565b5b81516107c684826020860161075f565b91505092915050565b600061014082840312156107e6576107e56106ad565b5b6107f16101406103b0565b90506000610801848285016105af565b6000830152506020610815848285016105af565b6020830152506040610829848285016106e2565b604083015250606061083d848285016106e2565b6060830152506080610851848285016106e2565b60808301525060a0610865848285016105af565b60a08301525060c061087984828501610720565b60c08301525060e061088d84828501610720565b60e0830152506101006108a28482850161062e565b6101008301525061012082015167ffffffffffffffff8111156108c8576108c76106b2565b5b6108d4848285016107a1565b6101208301525092915050565b6000602082840312156108f7576108f661032b565b5b600082015167ffffffffffffffff81111561091557610914610330565b5b610921848285016107cf565b9150509291505056fea264697066735822122016f869e10b215f902aaee6f9e2259cb100dbb7be7d5b5cc32241f678ddd7bcdf64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0C45EC5 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x7A SWAP2 SWAP1 PUSH2 0x5C4 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH20 0x3C44CDDDB6A900FA2B585DD299E03D12FA4293BC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP3 GT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x90F79BF6EB2C4F870365E785982E1F101E93B906 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10E DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0xE0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x152 DUP3 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0xC0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x182 DUP4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x120 ADD MLOAD DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x643 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x46 DUP3 LT ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x279 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3112A64 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x249 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x388 DUP3 PUSH2 0x33F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x3A6 PUSH2 0x350 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA PUSH2 0x321 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C6 DUP3 DUP3 PUSH2 0x37F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E6 JUMPI PUSH2 0x3E5 PUSH2 0x350 JUMP JUMPDEST JUMPDEST PUSH2 0x3EF DUP3 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E PUSH2 0x419 DUP5 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x43A JUMPI PUSH2 0x439 PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH2 0x445 DUP5 DUP3 DUP6 PUSH2 0x3FC JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x335 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x472 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x40B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4AF JUMPI PUSH2 0x4AE PUSH2 0x330 JUMP JUMPDEST JUMPDEST PUSH2 0x4BB DUP5 DUP3 DUP6 ADD PUSH2 0x44D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D9 DUP2 PUSH2 0x4C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x525 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x535 DUP2 PUSH2 0x51A JUMP JUMPDEST DUP2 EQ PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x552 DUP2 PUSH2 0x52C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x56B DUP2 PUSH2 0x558 JUMP JUMPDEST DUP2 EQ PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x588 DUP2 PUSH2 0x562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A1 DUP2 PUSH2 0x58E JUMP JUMPDEST DUP2 EQ PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5BE DUP2 PUSH2 0x598 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH2 0x5DC PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP7 DUP3 DUP8 ADD PUSH2 0x543 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5FC DUP7 DUP3 DUP8 ADD PUSH2 0x579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x60D DUP7 DUP3 DUP8 ADD PUSH2 0x5AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x620 DUP2 PUSH2 0x4C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x62B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x63D DUP2 PUSH2 0x617 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x65A JUMPI PUSH2 0x659 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x668 DUP6 DUP3 DUP7 ADD PUSH2 0x579 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x679 DUP6 DUP3 DUP7 ADD PUSH2 0x62E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x68C DUP2 PUSH2 0x58E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x683 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D4 DUP2 PUSH2 0x6B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6F1 DUP2 PUSH2 0x6CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x702 DUP3 PUSH2 0x4FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x712 DUP2 PUSH2 0x6F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x72F DUP2 PUSH2 0x709 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x753 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x738 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x772 PUSH2 0x76D DUP5 PUSH2 0x3CB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH2 0x799 DUP5 DUP3 DUP6 PUSH2 0x735 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B6 JUMPI PUSH2 0x7B5 PUSH2 0x335 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x7C6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x75F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E6 JUMPI PUSH2 0x7E5 PUSH2 0x6AD JUMP JUMPDEST JUMPDEST PUSH2 0x7F1 PUSH2 0x140 PUSH2 0x3B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x801 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x815 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x829 DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x83D DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x851 DUP5 DUP3 DUP6 ADD PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x865 DUP5 DUP3 DUP6 ADD PUSH2 0x5AF JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x879 DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x88D DUP5 DUP3 DUP6 ADD PUSH2 0x720 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x8A2 DUP5 DUP3 DUP6 ADD PUSH2 0x62E JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP PUSH2 0x120 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C7 PUSH2 0x6B2 JUMP JUMPDEST JUMPDEST PUSH2 0x8D4 DUP5 DUP3 DUP6 ADD PUSH2 0x7A1 JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F6 PUSH2 0x32B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x915 JUMPI PUSH2 0x914 PUSH2 0x330 JUMP JUMPDEST JUMPDEST PUSH2 0x921 DUP5 DUP3 DUP6 ADD PUSH2 0x7CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xF8 PUSH10 0xE10B215F902AAEE6F9E2 0x25 SWAP13 0xB1 STOP 0xDB 0xB7 0xBE PUSH30 0x5B5CC32241F678DDD7BCDF64736F6C634300081400330000000000000000 ","sourceMap":"555:820:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;805:567;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;868:4;884:10;895:14;910:11;934:4;923:42;;;;;;;;;;;;:::i;:::-;883:82;;;;;;987:42;983:46;;:2;:46;;;975:55;;;;;;1056:3;1048:6;:11;;1040:20;;;;;;1106:42;1078:70;;:17;1091:3;1078:12;:17::i;:::-;:26;;;:70;;;1070:79;;;;;;1196:2;1167:31;;:17;1180:3;1167:12;:17::i;:::-;:27;;;:31;;;1159:40;;;;;;1210:13;1224:10;1247:17;1260:3;1247:12;:17::i;:::-;:22;;;1236:49;;;;;;;;;;;;:::i;:::-;1209:76;;;;1311:2;1303:5;:10;;1295:19;;;;;;1339:4;1332:11;;:5;:11;;;1324:20;;;;;;1361:4;1354:11;;;;;;;805:567;;;:::o;655:143::-;718:18;;:::i;:::-;753:4;;;;;;;;;;:19;;;773:9;753:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;746:37;;655:143;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:5:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:307::-;1357:4;1447:18;1439:6;1436:30;1433:56;;;1469:18;;:::i;:::-;1433:56;1507:29;1529:6;1507:29;:::i;:::-;1499:37;;1591:4;1585;1581:15;1573:23;;1296:307;;;:::o;1609:146::-;1706:6;1701:3;1696;1683:30;1747:1;1738:6;1733:3;1729:16;1722:27;1609:146;;;:::o;1761:423::-;1838:5;1863:65;1879:48;1920:6;1879:48;:::i;:::-;1863:65;:::i;:::-;1854:74;;1951:6;1944:5;1937:21;1989:4;1982:5;1978:16;2027:3;2018:6;2013:3;2009:16;2006:25;2003:112;;;2034:79;;:::i;:::-;2003:112;2124:54;2171:6;2166:3;2161;2124:54;:::i;:::-;1844:340;1761:423;;;;;:::o;2203:338::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:78;2531:3;2523:6;2516:4;2508:6;2504:17;2457:78;:::i;:::-;2448:87;;2264:277;2203:338;;;;:::o;2547:507::-;2615:6;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2818:1;2807:9;2803:17;2790:31;2848:18;2840:6;2837:30;2834:117;;;2870:79;;:::i;:::-;2834:117;2975:62;3029:7;3020:6;3009:9;3005:22;2975:62;:::i;:::-;2965:72;;2761:286;2547:507;;;;:::o;3060:90::-;3094:7;3137:5;3130:13;3123:21;3112:32;;3060:90;;;:::o;3156:109::-;3237:21;3252:5;3237:21;:::i;:::-;3232:3;3225:34;3156:109;;:::o;3271:210::-;3358:4;3396:2;3385:9;3381:18;3373:26;;3409:65;3471:1;3460:9;3456:17;3447:6;3409:65;:::i;:::-;3271:210;;;;:::o;3487:126::-;3524:7;3564:42;3557:5;3553:54;3542:65;;3487:126;;;:::o;3619:104::-;3664:7;3693:24;3711:5;3693:24;:::i;:::-;3682:35;;3619:104;;;:::o;3729:138::-;3810:32;3836:5;3810:32;:::i;:::-;3803:5;3800:43;3790:71;;3857:1;3854;3847:12;3790:71;3729:138;:::o;3873:159::-;3938:5;3969:6;3963:13;3954:22;;3985:41;4020:5;3985:41;:::i;:::-;3873:159;;;;:::o;4038:77::-;4075:7;4104:5;4093:16;;4038:77;;;:::o;4121:122::-;4194:24;4212:5;4194:24;:::i;:::-;4187:5;4184:35;4174:63;;4233:1;4230;4223:12;4174:63;4121:122;:::o;4249:143::-;4306:5;4337:6;4331:13;4322:22;;4353:33;4380:5;4353:33;:::i;:::-;4249:143;;;;:::o;4398:77::-;4435:7;4464:5;4453:16;;4398:77;;;:::o;4481:122::-;4554:24;4572:5;4554:24;:::i;:::-;4547:5;4544:35;4534:63;;4593:1;4590;4583:12;4534:63;4481:122;:::o;4609:143::-;4666:5;4697:6;4691:13;4682:22;;4713:33;4740:5;4713:33;:::i;:::-;4609:143;;;;:::o;4758:679::-;4854:6;4862;4870;4919:2;4907:9;4898:7;4894:23;4890:32;4887:119;;;4925:79;;:::i;:::-;4887:119;5045:1;5070:72;5134:7;5125:6;5114:9;5110:22;5070:72;:::i;:::-;5060:82;;5016:136;5191:2;5217:64;5273:7;5264:6;5253:9;5249:22;5217:64;:::i;:::-;5207:74;;5162:129;5330:2;5356:64;5412:7;5403:6;5392:9;5388:22;5356:64;:::i;:::-;5346:74;;5301:129;4758:679;;;;;:::o;5443:116::-;5513:21;5528:5;5513:21;:::i;:::-;5506:5;5503:32;5493:60;;5549:1;5546;5539:12;5493:60;5443:116;:::o;5565:137::-;5619:5;5650:6;5644:13;5635:22;;5666:30;5690:5;5666:30;:::i;:::-;5565:137;;;;:::o;5708:501::-;5784:6;5792;5841:2;5829:9;5820:7;5816:23;5812:32;5809:119;;;5847:79;;:::i;:::-;5809:119;5967:1;5992:64;6048:7;6039:6;6028:9;6024:22;5992:64;:::i;:::-;5982:74;;5938:128;6105:2;6131:61;6184:7;6175:6;6164:9;6160:22;6131:61;:::i;:::-;6121:71;;6076:126;5708:501;;;;;:::o;6215:118::-;6302:24;6320:5;6302:24;:::i;:::-;6297:3;6290:37;6215:118;;:::o;6339:222::-;6432:4;6470:2;6459:9;6455:18;6447:26;;6483:71;6551:1;6540:9;6536:17;6527:6;6483:71;:::i;:::-;6339:222;;;;:::o;6567:117::-;6676:1;6673;6666:12;6690:117;6799:1;6796;6789:12;6813:101;6849:7;6889:18;6882:5;6878:30;6867:41;;6813:101;;;:::o;6920:120::-;6992:23;7009:5;6992:23;:::i;:::-;6985:5;6982:34;6972:62;;7030:1;7027;7020:12;6972:62;6920:120;:::o;7046:141::-;7102:5;7133:6;7127:13;7118:22;;7149:32;7175:5;7149:32;:::i;:::-;7046:141;;;;:::o;7193:96::-;7230:7;7259:24;7277:5;7259:24;:::i;:::-;7248:35;;7193:96;;;:::o;7295:122::-;7368:24;7386:5;7368:24;:::i;:::-;7361:5;7358:35;7348:63;;7407:1;7404;7397:12;7348:63;7295:122;:::o;7423:143::-;7480:5;7511:6;7505:13;7496:22;;7527:33;7554:5;7527:33;:::i;:::-;7423:143;;;;:::o;7572:246::-;7653:1;7663:113;7677:6;7674:1;7671:13;7663:113;;;7762:1;7757:3;7753:11;7747:18;7743:1;7738:3;7734:11;7727:39;7699:2;7696:1;7692:10;7687:15;;7663:113;;;7810:1;7801:6;7796:3;7792:16;7785:27;7634:184;7572:246;;;:::o;7824:432::-;7912:5;7937:65;7953:48;7994:6;7953:48;:::i;:::-;7937:65;:::i;:::-;7928:74;;8025:6;8018:5;8011:21;8063:4;8056:5;8052:16;8101:3;8092:6;8087:3;8083:16;8080:25;8077:112;;;8108:79;;:::i;:::-;8077:112;8198:52;8243:6;8238:3;8233;8198:52;:::i;:::-;7918:338;7824:432;;;;;:::o;8275:353::-;8341:5;8390:3;8383:4;8375:6;8371:17;8367:27;8357:122;;8398:79;;:::i;:::-;8357:122;8508:6;8502:13;8533:89;8618:3;8610:6;8603:4;8595:6;8591:17;8533:89;:::i;:::-;8524:98;;8347:281;8275:353;;;;:::o;8660:2192::-;8747:5;8791:6;8779:9;8774:3;8770:19;8766:32;8763:119;;;8801:79;;:::i;:::-;8763:119;8900:23;8916:6;8900:23;:::i;:::-;8891:32;;8981:1;9021:60;9077:3;9068:6;9057:9;9053:22;9021:60;:::i;:::-;9014:4;9007:5;9003:16;8996:86;8933:160;9154:2;9195:60;9251:3;9242:6;9231:9;9227:22;9195:60;:::i;:::-;9188:4;9181:5;9177:16;9170:86;9103:164;9326:2;9367:59;9422:3;9413:6;9402:9;9398:22;9367:59;:::i;:::-;9360:4;9353:5;9349:16;9342:85;9277:161;9507:2;9548:59;9603:3;9594:6;9583:9;9579:22;9548:59;:::i;:::-;9541:4;9534:5;9530:16;9523:85;9448:171;9688:3;9730:59;9785:3;9776:6;9765:9;9761:22;9730:59;:::i;:::-;9723:4;9716:5;9712:16;9705:85;9629:172;9862:3;9904:60;9960:3;9951:6;9940:9;9936:22;9904:60;:::i;:::-;9897:4;9890:5;9886:16;9879:86;9811:165;10040:3;10082:60;10138:3;10129:6;10118:9;10114:22;10082:60;:::i;:::-;10075:4;10068:5;10064:16;10057:86;9986:168;10217:3;10259:60;10315:3;10306:6;10295:9;10291:22;10259:60;:::i;:::-;10252:4;10245:5;10241:16;10234:86;10164:167;10395:3;10439:57;10492:3;10483:6;10472:9;10468:22;10439:57;:::i;:::-;10430:6;10423:5;10419:18;10412:85;10341:167;10588:3;10577:9;10573:19;10567:26;10620:18;10612:6;10609:30;10606:117;;;10642:79;;:::i;:::-;10606:117;10764:69;10829:3;10820:6;10809:9;10805:22;10764:69;:::i;:::-;10755:6;10748:5;10744:18;10737:97;10518:327;8660:2192;;;;:::o;10858:558::-;10955:6;11004:2;10992:9;10983:7;10979:23;10975:32;10972:119;;;11010:79;;:::i;:::-;10972:119;11151:1;11140:9;11136:17;11130:24;11181:18;11173:6;11170:30;11167:117;;;11203:79;;:::i;:::-;11167:117;11308:91;11391:7;11382:6;11371:9;11367:22;11308:91;:::i;:::-;11298:101;;11101:308;10858:558;;;;:::o"},"methodIdentifiers":{"runCondition(bytes)":"b0c45ec5"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"runCondition\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Condition.sol\":\"Condition\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ethereum-attestation-service/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"@ethereum-attestation-service/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"@ethereum-attestation-service/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"@ethereum-attestation-service/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"src/Condition.sol\":{\"keccak256\":\"0x40f1b97e505bcf1ef8459358b219e6d64cffc7761ef0577c43d53c41ebabac2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32878008b6b000353072e173a62445100c81cdea2071cabc2c047a0c12480a1\",\"dweb:/ipfs/QmbC8cDHqcTo5To2Fa1Un8r6dPrBt5uj1HwsroKstaQ5uP\"]}},\"version\":1}"}}}}}